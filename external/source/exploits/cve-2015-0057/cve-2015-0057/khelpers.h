/*
 * khelpers.h
 */
#pragma once

#ifdef DEBUGGING
#include <stdio.h>
#endif

#define WIN32_NO_STATUS
#include <windows.h>
#undef WIN32_NO_STATUS

#ifndef NTAPI
#define NTAPI __stdcall
#endif

#define PTR_SIZE sizeof(UINT_PTR)
#define STATUS_SUCCESS ((NTSTATUS)0x00000000L)

#ifndef _NTDEF_
typedef __success(return >= 0) LONG NTSTATUS;
typedef NTSTATUS *PNTSTATUS;
#endif

typedef struct _PROP
{
	PVOID      hData;
	USHORT     atomKey;
	USHORT     fs;
} PROP, *PPROP;

typedef struct _PROPLIST
{
	DWORD      cEntries;
	DWORD      iFirstFree;
	PROP       aprop[];
} PROPLIST, *PPROPLIST;

typedef struct _HANDLEENTRY
{
	PVOID      Head;
	PVOID      Owner;
	UINT8      Type;
	UINT8      Flags;
	UINT16     Uniq;
} HANDLEENTRY, *PHANDLEENTRY;

typedef struct _WNDMSG {
	ULONG      maxMsgs;
	PVOID      abMsgs;
} WNDMSG, *PWNDMSG;

typedef struct _SHAREDINFO
{
	PVOID        Psi;
	PHANDLEENTRY aheList;
	ULONG        HeEntrySize;
	PVOID        pDispInfo;
	ULONG        ulSharedDelta;
	WNDMSG       awmControl[31];
	WNDMSG       DefWindowMsgs;
	WNDMSG       DefWindowSpecMsgs;
} SHAREDINFO, *PSHAREDINFO;

typedef struct _SYSTEM_MODULE
{
	HANDLE     Reserved1;
	PVOID      Reserved2;
	PVOID      ImageBaseAddress;
	ULONG      ImageSize;
	ULONG      Flags;
	USHORT     Id;
	USHORT     Rank;
	USHORT     w018;
	USHORT     NameOffset;
	BYTE       Name[256];
} SYSTEM_MODULE, *PSYSTEM_MODULE;

typedef struct _SYSTEM_MODULE_INFORMATION
{
	ULONG         ModulesCount;
	SYSTEM_MODULE Modules[0];
} SYSTEM_MODULE_INFORMATION, *PSYSTEM_MODULE_INFORMATION;

typedef NTSTATUS(NTAPI *lNtAllocateVirtualMemory)(
	IN  HANDLE  ProcessHandle,
	IN  PVOID   *BaseAddress,
	IN  PULONG  ZeroBits,
	IN  PSIZE_T RegionSize,
	IN  ULONG   AllocationType,
	IN  ULONG   Protect
);

typedef PVOID(NTAPI *lNtCurrentTeb)(
	void
);

typedef NTSTATUS(NTAPI *lNtQueryInformationProcess)(
	_In_      HANDLE ProcessHandle,
	_In_      DWORD  ProcessInformationClass,
	_Out_     PVOID  ProcessInformation,
	_In_      ULONG  ProcessInformationLength,
	_Out_opt_ PULONG ReturnLength
);

typedef NTSTATUS(NTAPI *lNtQuerySystemInformation)(
	_In_       DWORD  SystemInformationClass,
	_Inout_    PVOID  SystemInformation,
	_In_       ULONG  SystemInformationLength,
	_Out_opt_  PULONG ReturnLength
);

extern lNtAllocateVirtualMemory pNtAllocateVirtualMemory;
extern lNtCurrentTeb pNtCurrentTeb;
extern lNtQueryInformationProcess pNtQueryInformationProcess;
extern lNtQuerySystemInformation pNtQuerySystemInformation;

#ifdef DEBUGGING
void dprintf(char* pszFormat, ...);
#else
#define dprintf(...)
#endif

#define DEBUG_MSGBOX(msg)(MessageBox(NULL, msg, NULL, 0))

PSHAREDINFO get_shared_info(void);
PHANDLEENTRY get_ahe_list(void);
PVOID get_kernel_address(HANDLE hHandle);
PVOID get_userland_address(HANDLE hHandle, BOOL bDesktopHeap);
BOOL init_kernel_help(void);
BOOL pause_all_other_threads(void);
BOOL resume_all_other_threads(void);