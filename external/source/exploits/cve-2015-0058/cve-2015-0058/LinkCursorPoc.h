typedef unsigned __int64 QWORD;

typedef struct
{
	UINT	cbSize;
	DWORD	dwFlags;
	DWORD	dwID;
	HWND	hwndTarget;
	POINTS	ptsLocation;
	DWORD	dwInstanceID;
	QWORD	arbitraryFree;
	QWORD   ulArguments;
	UINT	cbExtraArgs;
} EXTGESTUREINFO, *PEXTGESTUREINFO;

typedef struct
{
	DWORD fill;
	DWORD flags;
	DWORD numEntries;
	DWORD fill2;
	QWORD fill3[7];
	DWORD fill4;
	DWORD FunctionPtrLow;
	DWORD FunctionPtrHigh;
	DWORD fill5;
	QWORD fill6[2];
	DWORD fill7;
	DWORD PalEntriesPtrLow;
	DWORD PalEntriesPtrHigh;
	DWORD SelfRefPtrLow;
	DWORD SelfRefPtrHigh;
	BYTE  colors[360];
} FAKEPALETTE, *PFAKEPALETTE;


typedef struct _RTL_PROCESS_MODULE_INFORMATION {
	HANDLE Section;
	PVOID MappedBase;
	PVOID ImageBase;
	ULONG ImageSize;
	ULONG Flags;
	USHORT LoadOrderIndex;
	USHORT InitOrderIndex;
	USHORT LoadCount;
	USHORT OffsetToFileName;
	UCHAR FullPathName[256];
} RTL_PROCESS_MODULE_INFORMATION, *PRTL_PROCESS_MODULE_INFORMATION;

typedef struct _RTL_PROCESS_MODULES {
	ULONG NumberOfModules;
	RTL_PROCESS_MODULE_INFORMATION Modules[1];
} RTL_PROCESS_MODULES, *PRTL_PROCESS_MODULES;

typedef  ULONG(WINAPI * xxxNtQuerySystemInformation)(ULONG, PVOID, ULONG, PULONG);

enum { SystemModuleInformation = 11 };

#define SYSCALL_ARG(x) ((__int64)(x))

ULONG(*SystemCall)(__int64 Argument1, __int64 Argument2, __int64 Argument3, __int64 Argument4,
	__int64 Argument5, __int64 Argument6, __int64 Argument7, __int64 Argument8);

ULONG(*NtInjectGesture)(__int64 Argument1, __int64 Argument2, __int64 Argument3, __int64 Argument4,
	__int64 Argument5, __int64 Argument6, __int64 Argument7, __int64 Argument8);

LRESULT CALLBACK GestureProc(HWND, UINT, WPARAM, LPARAM);

ULONG InjectGesture(HWND hwnd, PEXTGESTUREINFO gestureInfo);

